{"version":3,"sources":["storage/key.js"],"names":["Key","args","subkey","client","get","fullKey","data","parse","set","stringify","n","incrby"],"mappings":";;;;;;;;AAAA;;;;AAEA;;;;;;;;;;;;;;IAEqBA,G;;;AACnB,iBAAqB;AAAA;;AAAA;;AAAA,sCAANC,IAAM;AAANA,UAAM;AAAA;;AAAA,gIACVA,IADU;AAEpB;;;;;6EAESC,M;;;;;;;uBACS,KAAKC,MAAL,CAAYC,GAAZ,CAAgB,KAAKC,OAAL,CAAaH,MAAb,CAAhB,C;;;AAAbI,oB;iDACG,KAAKC,KAAL,CAAWD,IAAX,C;;;;;;;;;;;;;;;;;;;8EAGCA,I,EAAMJ,M;;;;;;uBACD,KAAKC,MAAL,CAAYK,GAAZ,CAAgB,KAAKH,OAAL,CAAaH,MAAb,CAAhB,EAAsC,KAAKO,SAAL,CAAeH,IAAf,CAAtC,C;;;;;;;;;;;;;;;;;;;;;;8EAGGI,C,EAAGR,M;;;;;;uBACN,KAAKC,MAAL,CAAYQ,MAAZ,CAAmB,KAAKN,OAAL,CAAaH,MAAb,CAAnB,EAAyCQ,CAAzC,C;;;;;;;;;;;;;;;;;;;;;;;;kBAfIV,G","file":"storage/key.js","sourcesContent":["import _ from 'underscore';\n\nimport CommonKey from './common-key';\n\nexport default class Key extends CommonKey {\n  constructor(...args) {\n    super(...args);\n  }\n\n  async get(subkey) {\n    let data = await this.client.get(this.fullKey(subkey));\n    return this.parse(data);\n  }\n\n  async set(data, subkey) {\n    return await this.client.set(this.fullKey(subkey), this.stringify(data));\n  }\n\n  async incrementBy(n, subkey) {\n    return await this.client.incrby(this.fullKey(subkey), n);\n  }\n}\n"],"sourceRoot":"/source/"}