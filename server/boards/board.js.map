{"version":3,"sources":["boards/board.js"],"names":["Permissions","Tools","RX_EXCEPT","RX_SEVERAL","DEFAULT_SUPPORTED_FILE_TYPES","MARKUP_ELEMENTS","DEFAULT_MARKUP_ELEMENTS","slice","boards","banners","postFormRules","getRules","boardName","fileName","__dirname","existsSync","data","readFileSync","split","filter","rule","err","error","stack","getBoards","includeHidden","toArray","sort","b1","b2","name","localeCompare","board","enabled","hidden","getDefaultBoards","prBoard","Board","translate","noop","defineSetting","defaultUserName","map","title","boardNames","reduce","acc","path","readdirSync","common","specific","reverse","i","length","test","excluded","match","n","_","indexOf","flatten","forEach","addBoard","loadPlugins","_1","_2","plugin","reloadBanners","reloadPostFormRules","defaultPriority","defaultGroupName","option","defineProperty","Captcha","requireWrapper","require","captchaIDs","PERMISSIONS","mapObject","defaultLevel","key","Date","def","Object","get","configurable","value","model","groupName","showWhois","postingEnabled","captchaEnabled","maxEmailLength","maxNameLength","maxSubjectLength","maxTextLength","maxPasswordLength","maxFileCount","minFileCount","maxFileSize","maxLastPosts","markupElements","supportedFileTypes","supportedCaptchaEngines","bumpLimit","postLimit","bannerFileNames","launchDate","toISOString","permissions","opModeration","customInfoFields","field","engineName","contains","fileType","req","mode","fields","files","existingFileCount","subject","text","password","Error","maxTextFieldLength","file","size","mimeType","extraData","sourceBoard","post","rawSubject","isOp","number","threadNumber","t","user","hashpass","options","showTripcode","tripcode","generateTripcode","tt","stripcode","ip","hasOwnProperty","geolocation","countryName","source","crypto","substr"],"mappings":"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","file":"board.js","sourcesContent":["import _ from 'underscore';\nimport FSSync from 'fs';\nimport tripcode from 'tripcode';\n\nimport config from '../helpers/config';\nimport Logger from '../helpers/logger';\nimport * as Permissions from '../helpers/permissions';\nimport * as Tools from '../helpers/tools';\n\nconst RX_EXCEPT = /^#include\\s+except(\\((\\d+(\\,\\d+)*)\\))$/;\nconst RX_SEVERAL = /^#include\\s+(\\d+(\\,\\d+)*)$/;\nconst DEFAULT_SUPPORTED_FILE_TYPES = ['application/ogg', 'application/pdf', 'audio/mpeg', 'audio/ogg', 'audio/wav',\n  'image/gif', 'image/jpeg', 'image/png', 'video/mp4', 'video/ogg', 'video/webm'];\nconst MARKUP_ELEMENTS = ['BOLD', 'ITALICS', 'STRIKED_OUT', 'UNDERLINED', 'SPOILER', 'QUOTATION', 'UNORDERED_LIST',\n  'ORDERED_LIST', 'LIST_ITEM', 'SUBSCRIPT', 'SUPERSCRIPT', 'URL', 'CODE', 'LATEX', 'INLINE_LATEX'];\nconst DEFAULT_MARKUP_ELEMENTS = MARKUP_ELEMENTS.slice(0, -3);\n\nlet boards = {};\nlet banners = {};\nlet postFormRules = {};\n\nfunction getRules(boardName) {\n  let fileName = `${__dirname}/../../misc/rules/rules${(boardName ? ('.' + boardName) : '')}.txt`;\n  try {\n    if (!FSSync.existsSync(fileName)) {\n      return [];\n    }\n    var data = FSSync.readFileSync(fileName, 'utf8');\n    if (!data) {\n      return [];\n    }\n    return data.split(/\\r*\\n+/gi).filter(rule => !!rule);\n  } catch (err) {\n    Logger.error(err.stack || err);\n    return [];\n  }\n}\n\nfunction getBoards(includeHidden) {\n  includeHidden = (includeHidden || (typeof includeHidden === 'undefined'));\n  return _(boards).toArray().sort((b1, b2) => { return b1.name.localeCompare(b2.name); }).filter((board) => {\n    return board.enabled && (includeHidden || board.hidden);\n  });\n}\n\nfunction getDefaultBoards() {\n  let prBoard = new Board('pr', Tools.translate.noop('/pr/ogramming', 'boardTitle'));\n  prBoard.defineSetting('markupElements', MARKUP_ELEMENTS);\n  return [\n    new Board('3dpd', Tools.translate.noop('3D pron', 'boardTitle')),\n    new Board('a', Tools.translate.noop('/a/nime', 'boardTitle'),\n      { defaultUserName: Tools.translate.noop('Kamina', 'defaultUserName') }),\n    new Board('b', Tools.translate.noop('/b/rotherhood', 'boardTitle')),\n    new Board('d', Tools.translate.noop('Board /d/iscussion', 'boardTitle')),\n    new Board('h', Tools.translate.noop('/h/entai', 'boardTitle')),\n    prBoard,\n    new Board('rf', Tools.translate.noop('Refuge', 'boardTitle'),\n      { defaultUserName: Tools.translate.noop('Whiner', 'defaultUserName') }),\n    new Board('vg', Tools.translate.noop('Video games', 'boardTitle'),\n      { defaultUserName: Tools.translate.noop('PC Nobleman', 'defaultUserName') })\n  ];\n}\n\n/** Class representing a board. */\nclass Board {\n  static board(name) {\n    return boards[name];\n  }\n\n  static addBoard(board) {\n    boards[board.name] = board;\n  }\n\n  static boardInfos(includeHidden) {\n    return getBoards(includeHidden).map((board) => {\n      return {\n        name: board.name,\n        title: board.title\n      };\n    });\n  }\n\n  static boardNames(includeHidden) {\n    return getBoards(includeHidden).map(board => board.name);\n  }\n\n  static reloadBanners() {\n    banners = Board.boardNames().reduce((acc, boardName) => {\n      let path = `${__dirname}/../../public/img/banners/${boardName}`;\n      if (FSSync.existsSync(path)) {\n        acc[boardName] = FSSync.readdirSync(path).filter((fileName) => { return '.gitignore' !== fileName; });\n      } else {\n        acc[boardName] = [];\n      }\n      return acc;\n    }, {});\n  }\n\n  static reloadPostFormRules() {\n    let common = getRules();\n    postFormRules = Board.boardNames().reduce((acc, boardName) => {\n      let specific = getRules(boardName).reverse();\n      specific = specific.map((rule, i) => {\n        i = specific.length - i - 1;\n        if ('#include all' === rule) {\n          return common;\n        } else if (RX_EXCEPT.test(rule)) {\n          let excluded = rule.match(RX_EXCEPT)[2].split(',').map(n => +n);\n          return common.filter((_, i) => { return excluded.indexOf(i) < 0; });\n        } else if (RX_SEVERAL.test(rule)) {\n          return rule.match(RX_SEVERAL)[1].split(',').map(n => +n).filter((n) => {\n            return n >= 0 && n < common.length;\n          }).map(n => common[n]);\n        } else {\n          return rule;\n        }\n      });\n      specific = _(specific).flatten().reverse();\n      acc[boardName] = (specific.length > 0) ? specific : common;\n      return acc;\n    }, {});\n  }\n\n  static initialize() {\n    boards = {};\n    if (config('board.useDefaultBoards')) {\n      getDefaultBoards().forEach((board) => {\n        Board.addBoard(board);\n      });\n    }\n    Tools.loadPlugins([__dirname, `${__dirname}/custom`], (fileName, _1, _2, path) => {\n      return ('board.js' !== fileName) || (path.split('/') === 'custom');\n    }).map((plugin) => {\n      return (typeof plugin === 'function') ? new plugin() : plugin;\n    }).forEach((board) => {\n      Board.addBoard(board);\n    });\n    Board.reloadBanners();\n    Board.reloadPostFormRules();\n  }\n\n  constructor(name, title, { defaultPriority, defaultUserName, defaultGroupName } = {}) {\n    defaultPriority = Tools.option(defaultPriority, 'number', 0);\n    defaultUserName = defaultUserName ? Tools.translate(defaultUserName)\n      : Tools.translate('Anonymous', 'defaultUserName');\n    defaultGroupName = defaultGroupName || '';\n    this.defineProperty('name', name);\n    this.defineSetting('title', () => { return Tools.translate(title); });\n    this.defineSetting('property', defaultPriority);\n    this.defineSetting('defaultUserName', defaultUserName);\n    this.defineSetting('groupName', defaultGroupName);\n    this.defineProperty('captchaEnabled', () => {\n      return config('board.captchaEnabled', true) && config(`board.${name}.captchaEnabled`, true);\n    });\n    this.defineProperty('bannerFileNames', () => { return banners[name]; });\n    this.defineProperty('postFormRules', () => { return postFormRules[name]; });\n    this.defineSetting('skippedGetOrder', 0);\n    this.defineSetting('opModeration', false);\n    this.defineSetting('captchaQuota', 0);\n    this.defineSetting('enabled', true);\n    this.defineSetting('hidden', false);\n    this.defineSetting('maxNameLength', 50);\n    this.defineSetting('maxSubjectLength', 150);\n    this.defineSetting('maxTextLength', 15000);\n    this.defineSetting('maxPasswordLength', 50);\n    this.defineSetting('maxFileCount', 1);\n    this.defineSetting('maxFileSize', 10 * 1024 * 1024);\n    this.defineSetting('maxLastPosts', 3);\n    this.defineSetting('markupElements', DEFAULT_MARKUP_ELEMENTS);\n    this.defineSetting('postingEnabled', true);\n    this.defineSetting('showWhois', false);\n    const Captcha = Tools.requireWrapper(require('../captchas/captcha'));\n    this.defineSetting('supportedCaptchaEngines', () => { return Captcha.captchaIDs(); });\n    this.defineProperty('permissions', () => {\n      return _(Permissions.PERMISSIONS).mapObject((defaultLevel, key) => {\n        return config(`board.${name}.permissions.${key}`, config(`permissions.${key}`, defaultLevel));\n      });\n    });\n    this.defineSetting('supportedFileTypes', DEFAULT_SUPPORTED_FILE_TYPES);\n    this.defineSetting('bumpLimit', 500);\n    this.defineSetting('postLimit', 1000);\n    this.defineSetting('threadLimit', 200);\n    this.defineSetting('archiveLimit', 0);\n    this.defineSetting('threadsPerPage', 20);\n    this.defineProperty('launchDate', () => {\n      return new Date(config(`board.${name}.launchDate`, config('board.launchDate', new Date())));\n    });\n  }\n\n  defineSetting(name, def) {\n    Object.defineProperty(this, name, {\n      get: () => {\n        return config(`board.${this.name}.${name}`,\n          config(`board.${name}`, (typeof def === 'function') ? def() : def));\n      },\n      configurable: true\n    });\n  }\n\n  defineProperty(name, value) {\n    if (typeof value === 'function') {\n      Object.defineProperty(this, name, {\n        get: value,\n        configurable: true\n      });\n    } else {\n      Object.defineProperty(this, name, {\n        value: value,\n        configurable: true\n      });\n    }\n  }\n\n  info() {\n    let model = {\n      name: this.name,\n      title: this.title,\n      defaultUserName: this.defaultUserName,\n      groupName: this.groupName,\n      showWhois: this.showWhois,\n      hidden: this.hidden,\n      postingEnabled: this.postingEnabled,\n      captchaEnabled: this.captchaEnabled,\n      maxEmailLength: this.maxEmailLength,\n      maxNameLength: this.maxNameLength,\n      maxSubjectLength: this.maxSubjectLength,\n      maxTextLength: this.maxTextLength,\n      maxPasswordLength: this.maxPasswordLength,\n      maxFileCount: this.maxFileCount,\n      minFileCount: this.minFileCount,\n      maxFileSize: this.maxFileSize,\n      maxLastPosts: this.maxLastPosts,\n      markupElements: this.markupElements,\n      supportedFileTypes: this.supportedFileTypes,\n      supportedCaptchaEngines: this.supportedCaptchaEngines,\n      bumpLimit: this.bumpLimit,\n      postLimit: this.postLimit,\n      bannerFileNames: this.bannerFileNames,\n      postFormRules: this.postFormRules,\n      launchDate: this.launchDate.toISOString(),\n      permissions: this.permissions,\n      opModeration: this.opModeration\n    };\n    this.customInfoFields().forEach((field) => {\n      model[field] = this[field];\n    });\n    return model;\n  }\n\n  customInfoFields() {\n    return [];\n  }\n\n  isCaptchaEngineSupported(engineName) {\n    return _(this.supportedCaptchaEngines).contains(engineName);\n  }\n\n  isFileTypeSupported(fileType) {\n    return _(this.supportedFileTypes).contains(fileType);\n  }\n\n  apiRoutes() {\n    return [];\n  }\n\n  actionRoutes() {\n    return [];\n  }\n\n  async testParameters({ req, mode, fields, files, existingFileCount }) {\n    let { name, subject, text, password } = fields;\n    name = name || '';\n    subject = subject || '';\n    text = text || '';\n    password = password || '';\n    if (name.length > this.maxNameLength) {\n      throw new Error(Tools.translate('Name is too long'));\n    }\n    if (subject.length > this.maxSubjectLength) {\n      throw new Error(Tools.translate('Subject is too long'));\n    }\n    if (text.length > this.maxTextFieldLength) {\n      throw new Error(Tools.translate('Comment is too long'));\n    }\n    if (password.length > this.maxPasswordLength) {\n      throw new Error(Tools.translate('Password is too long'));\n    }\n    if ('markupText' === mode || 'editPost' === mode) {\n      return;\n    }\n    if ('createThread' === mode && this.maxFileCount && files.length <= 0 && this.minFileCount != 0) {\n      throw new Error(Tools.translate('Attempt to create a thread without attaching a file'));\n    }\n    if ('deleteFile' === mode && (existingFileCount > 0)) {\n      --existingFileCount;\n    }\n    if (text.length <= 0 && (files.length + existingFileCount) <= 0) {\n      throw new Error(Tools.translate('Both file and comment are missing'));\n    }\n    if ((files.length + existingFileCount) > this.maxFileCount) {\n      throw new Error(Tools.translate('Too many files'));\n    }\n    let err = files.reduce((err, file) => {\n      if (err) {\n        return err;\n      }\n      if (file.size > this.maxFileSize) {\n        return Tools.translate('File is too big');\n      }\n      if (this.supportedFileTypes.indexOf(file.mimeType) < 0) {\n        return Tools.translate('File type is not supported');\n      }\n    }, '');\n    if (err) {\n      throw err;\n    }\n  }\n\n  async getPostExtraData(req, fields, files) {\n    return null;\n  }\n\n  async editPostExtraData(req, fields, extraData) {\n    return extraData || null;\n  }\n\n  async transformPostExtraData(extraData, sourceBoard) {\n    return null;\n  }\n\n  async renderPost(post) {\n    post.rawSubject = post.subject;\n    post.isOp = (post.number === post.threadNumber);\n    let t = (post.name && (post.name.indexOf('span') === -1)) ? post.name.indexOf('#') : -1;\n    if (post.user.hashpass && post.options.showTripcode) {\n      post.tripcode = this.generateTripcode(post.user.hashpass);\n    } else if (t >= 0) {\n      let tt = post.name.indexOf('##');\n      post.tripcode = this.stripcode((tt >= 0)? post.name.slice(t+1,tt): post.name.slice(t+1));\n      if (tt >= 0)\n        post.tripcode += '!' + this.stripcode(post.name.slice(tt+2));\n      post.options.showTripcode = !0;\n    }\n    if (t > 0) {\n      post.name = post.name.slice(0, t);\n    } else if (t == 0)\n      delete post.name;\n    delete post.user.ip;\n    delete post.user.hashpass;\n    delete post.user.password;\n    if (post.hasOwnProperty('geolocation')) {\n      if (this.showWhois) {\n        if (!post.geolocation.countryName) {\n          post.geolocation.countryName = 'Unknown country';\n        }\n      } else {\n        delete post.geolocation;\n      }\n    }\n    return post;\n  }\n\n  generateTripcode(source) {\n    return '!' + Tools.crypto('md5', source + config('site.tripcodeSalt'), 'base64').substr(0, 10);\n  }\n\n  stripcode(t) {\n    if(!t.length || typeof t != \"string\")\n      return \"\";\n    return \"!\" + tripcode(t);\n  }\n}\n\nexport default Board;\n"]}