{"version":3,"sources":["helpers/tools.js"],"names":["arr","f","container","isArray","isObject","p","Promise","resolve","forEach","el","index","then","result","push","each","key","series","now","mayBeHashpass","correctAddress","preferIPv4","crypto","sha1","ipList","option","testPostNumber","cloned","addIPv4","compareRegisteredUserLevels","requireWrapper","loadPlugins","toHashpass","processError","pad","chunk","escapeRegExp","translate","require","locale","extraLocations","__dirname","silent","on","setLocale","NON_THEME_STYLESHEETS","Set","reduce","acc","prefix","concat","map","suffix","STYLES_PATH","CODE_STYLES_PATH","JS_TYPES","SECOND","MINUTE","HOUR","DAY","FILE_RATINGS","NODE_CAPTCHA_ID","REGISTERED_USER_LEVELS","BAN_LEVELS","STYLES","readdirSync","filter","fileName","split","pop","has","shift","name","slice","join","match","exec","readFileSync","title","CODE_STYLES","Date","password","ip","replace","address","isValid","correctForm","err","fromAddress4","ipv4","to4","algorithm","data","encoding","isBuffer","hash","createHash","update","digest","arguments","s","ips","some","returntranslate","uniq","source","acceptable","def","strict","invert","test","converted","accepted","a","isNaN","isRegExp","postNumber","value","val","recursive","object","l1","l2","indexOf","m","default","paths","keepCache","list","path","pathIndex","fileNames","id","cache","hasOwnProperty","plugins","flatten","notHashpass","dir","code","status","Error","Tools","what","length","ch","l","Array","toString","array","size","res","item","text"],"mappings":"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","file":"helpers/tools.js","sourcesContent":["import _ from 'underscore';\nimport { Address4, Address6 } from 'ip-address';\nimport Crypto from 'crypto';\nimport FSSync from 'fs';\nimport merge from 'merge';\nimport Util from 'util';\n\nimport config from './config';\n\nlet translate = require('cute-localize')({\n  locale: config('site.locale'),\n  extraLocations: `${__dirname}/../../translations/custom`,\n  silent: true\n});\n\nconfig.on('site.locale', (locale) => { translate.setLocale(locale); });\n\nexport { translate as translate };\n\nconst NON_THEME_STYLESHEETS = new Set(['', 'custom-'].reduce((acc, prefix) => {\n  return acc.concat(['combined', 'desktop', 'mobile'].map(suffix => `${prefix}base-${suffix}`));\n}, []));\nconst STYLES_PATH = `${__dirname}/../../public/css`;\nconst CODE_STYLES_PATH = `${__dirname}/../../public/css/3rdparty/highlight.js`;\nconst JS_TYPES = new Set(['string', 'boolean', 'number', 'object']);\n\nexport const SECOND = 1000;\nexport const MINUTE = 60 * SECOND;\nexport const HOUR = 60 * MINUTE;\nexport const DAY = 24 * HOUR;\nexport const FILE_RATINGS = ['SFW', 'R-15', 'R-18', 'R-18G'];\nexport const NODE_CAPTCHA_ID = 'node-captcha';\nexport const REGISTERED_USER_LEVELS = ['USER', 'MODER', 'ADMIN', 'SUPERUSER'];\nexport const BAN_LEVELS = ['NONE', 'READ_ONLY', 'NO_ACCESS'];\nexport const STYLES = FSSync.readdirSync(STYLES_PATH).filter((fileName) => {\n  return fileName.split('.').pop() === 'css' && !NON_THEME_STYLESHEETS.has(fileName.split('.').shift());\n}).map((fileName) => {\n  let name = fileName.split('.').slice(0, -1).join('.');\n  let match = /\\/\\*\\!\\s*([^\\*]+?)\\s*\\*\\//gi.exec(FSSync.readFileSync(`${STYLES_PATH}/${fileName}`, 'utf8'));\n  return {\n    name: name,\n    title: (match ? match[1] : name)\n  };\n});\n\nexport const CODE_STYLES = FSSync.readdirSync(CODE_STYLES_PATH).filter((fileName) => {\n  return fileName.split('.').pop() === 'css';\n}).map((fileName) => {\n  let name = fileName.split('.').slice(0, -1).join('.');\n  let match = /\\/\\*\\s*([^\\*]+?)\\s*\\*\\//gi.exec(FSSync.readFileSync(`${CODE_STYLES_PATH}/${fileName}`, 'utf8'));\n  return {\n    name: name,\n    title: (match ? match[1] : name)\n  };\n});\n\nexport function now() {\n  return new Date();\n}\n\nexport function mayBeHashpass(password) {\n  return (typeof password === 'string') && password.match(/^([0-9a-fA-F]){40}$/);\n}\n\nexport function correctAddress(ip) {\n  if (!ip || typeof ip !== 'string') {\n    return null;\n  }\n  if ('::1' === ip) {\n    ip = '127.0.0.1';\n  }\n  let match = ip.match(/^\\:\\:ffff\\:(\\d+\\.\\d+\\.\\d+\\.\\d+)$/);\n  if (match) {\n    ip = match[1];\n  }\n  if (ip.replace(':', '') === ip) {\n    ip = '::' + ip;\n  }\n  try {\n    let address = new Address6(ip);\n    if (address.isValid()) {\n      return address.correctForm();\n    }\n  } catch (err) {\n    //\n  }\n  try {\n    let address = Address6.fromAddress4(ip);\n    if (address.isValid()) {\n      return address.correctForm();\n    }\n  } catch (err) {\n    //\n  }\n  return null;\n}\n\nexport function preferIPv4(ip) {\n  if (!ip) {\n    return null;\n  }\n  try {\n    let address = new Address6(ip);\n    let ipv4 = address.to4();\n    if (ipv4.isValid()) {\n      ipv4 = ipv4.correctForm();\n      return ('0.0.0.1' === ipv4) ? '127.0.0.1' : ipv4;\n    }\n    if (address.isValid()) {\n      return address.correctForm();\n    }\n    return ip;\n  } catch (err) {\n    //\n  }\n  return ip;\n}\n\nexport function crypto(algorithm, data, encoding = 'hex') {\n  if (!data || (typeof data !== 'string' && !Util.isBuffer(data))) {\n    return null;\n  }\n  let hash = Crypto.createHash(algorithm);\n  hash.update(data);\n  return hash.digest(encoding);\n}\n\nexport function sha1() {\n  return crypto('sha1', ...arguments);\n}\n\nexport async function series(arr, f, container) {\n  if (container && typeof container !== 'object') {\n    container = [];\n  }\n  let isArray = _(container).isArray();\n  let isObject = (typeof container === 'object');\n  let p = Promise.resolve();\n  if (_(arr).isArray()) {\n    arr.forEach((el, index) => {\n      p = p.then(() => {\n        return f(el, index);\n      }).then((result) => {\n        if (isArray) {\n          container.push(result);\n        } else if (isObject) {\n          container[el] = result;\n        }\n      });\n    });\n  } else if (_(arr).isObject()) {\n    _(arr).each((el, key) => {\n      p = p.then(() => {\n        return f(el, key);\n      }).then((result) => {\n        if (isArray) {\n          container.push(result);\n        } else if (isObject) {\n          container[key] = result;\n        }\n      });\n    });\n  }\n  if (!container) {\n    return p;\n  }\n  return p.then(() => { return container; });\n}\n\nexport function ipList(s) {\n  let ips = (s || '').split(/\\s+/).filter(ip => !!ip);\n  //TODO: IP ranges\n  ips = ips.map(ip => correctAddress(ip));\n  if (ips.some(ip => !ip)) {\n    returntranslate('Invalid IP address');\n  }\n  return _(ips).uniq();\n}\n\nexport function option(source, acceptable, def, { strict, invert, test } = {}) {\n  if (typeof source === 'undefined') {\n    return def;\n  }\n  if (!_(acceptable).isArray()) {\n    acceptable = [acceptable];\n  }\n  let converted = source;\n  let accepted = acceptable.filter((a) => { return typeof a === 'string' && JS_TYPES.has(a); }).some((a) => {\n    if (typeof source === a) {\n      return true;\n    }\n    if (strict) {\n      return false;\n    }\n    switch (a) {\n    case 'number':\n      converted = +source;\n      return !isNaN(converted);\n    case 'boolean':\n      converted = !!source;\n      return true;\n    case 'string':\n      converted = '' + source;\n      return true;\n    break;\n    }\n  });\n  if (invert) {\n    accepted = !accepted;\n  }\n  if (typeof test === 'function') {\n    accepted = accepted && test(converted);\n  } else if (_(test).isRegExp()) {\n    accepted = accepted && test.test(converted);\n  }\n  return accepted ? converted : def;\n}\n\nexport function testPostNumber(postNumber) {\n  return postNumber > 0;\n}\n\nexport function cloned(value) {\n  if (_(value).isArray()) {\n    return value.slice(0).map(val => cloned(val));\n  } else if (_(value).isObject()) {\n    return merge.recursive(true, value);\n  } else {\n    return value;\n  }\n}\n\nexport function addIPv4(object, ip) {\n  ip = ip || (object && object.ip);\n  if (!ip) {\n    return object;\n  }\n  let ipv4 = preferIPv4(ip);\n  if (ipv4 && ipv4 !== ip) {\n    object.ipv4 = ipv4;\n  }\n  return object;\n}\n\nexport function compareRegisteredUserLevels(l1, l2) {\n  return REGISTERED_USER_LEVELS.indexOf(l1) - REGISTERED_USER_LEVELS.indexOf(l2);\n}\n\nexport function requireWrapper(m) {\n  return (m && m.default) || m;\n}\n\nexport function loadPlugins(paths, filter, keepCache) {\n  if (typeof filter !== 'function') {\n    if (typeof filter === 'undefined' || filter) {\n      filter = (fileName) => { return 'index.js' !== fileName; };\n    } else {\n      filter = () => true;\n    }\n  }\n  if (!_(paths).isArray()) {\n    paths = [paths];\n  }\n  let list = paths.map((path, pathIndex) => {\n    return FSSync.readdirSync(path).filter((fileName) => {\n      return fileName.split('.').pop() === 'js';\n    }).filter((fileName, index, fileNames) => {\n      return filter(fileName, index, fileNames, path, pathIndex);\n    }).map((fileName) => {\n      let id = require.resolve(`${path}/${fileName}`);\n      if (!keepCache && require.cache.hasOwnProperty(id)) {\n        delete require.cache[id];\n      }\n      let plugins = requireWrapper(require(id));\n      if (!_(plugins).isArray()) {\n        plugins = [plugins];\n      }\n      return plugins;\n    });\n  });\n  return _(list).flatten();\n}\n\nexport function toHashpass(password, notHashpass) {\n  if (notHashpass || !mayBeHashpass(password)) {\n    password = sha1(password);\n  }\n  return password;\n}\n\nexport function processError(err, dir) {\n  if ('ENOENT' === err.code) {\n    err.status = 404;\n  } else if (typeof dir !== 'undefined') {\n    if (dir && 'ENOTDIR' === err.code) {\n      err = new Error(Tools.translate('Not a directory'));\n    } else if (!dir && 'EISDIR' === err.code) {\n      err = new Error(Tools.translate('Not a file'));\n    }\n  }\n  return err;\n}\n\nexport function pad(what, length, ch) {\n  what = '' + what;\n  length = option(length, 'number', 2, { test: (l) => { return l > 0; } });\n  if (!length) {\n    return what;\n  }\n  if (length - what.length <= 0) {\n    return what;\n  }\n  return Array(length - what.length + 1).join((ch || '0').toString()[0]) + what;\n}\n\nexport function chunk(array, size) {\n  return array.reduce((res, item, index) => {\n    if (index % size === 0) {\n      res.push([]);\n    }\n    res[res.length - 1].push(item);\n    return res;\n  }, []);\n}\n\nexport function escapeRegExp(text) {\n  if (typeof text !== 'string') {\n    return text;\n  }\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n"],"sourceRoot":"/source/"}