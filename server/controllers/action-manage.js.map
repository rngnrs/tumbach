{"version":3,"sources":["controllers/action-manage.js"],"names":["fields","ips","Tools","ipList","Error","levels","map","value","name","match","boardName","level","filter","getRegisteredUserData","Files","Renderer","IPC","PostsModel","UsersModel","router","Router","post","req","res","next","isSuperuser","translate","parseForm","hashpass","mayBeHashpass","toHashpass","registerUser","json","updateRegisteredUser","unregisterUser","dir","fileName","isDir","files","createFile","file","toArray","processError","content","editFile","oldFileName","renameFile","deleteFile","targets","rerender","markupPosts","targetsFromString","boards","templates","send"],"mappings":"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","file":"action-manage.js","sourcesContent":["import _ from 'underscore';\nimport express from 'express';\n\nimport * as Files from '../core/files';\nimport * as Renderer from '../core/renderer';\nimport * as IPC from '../helpers/ipc';\nimport * as Tools from '../helpers/tools';\nimport * as PostsModel from '../models/posts';\nimport * as UsersModel from '../models/users';\n\nlet router = express.Router();\n\nasync function getRegisteredUserData(fields) {\n  let ips = Tools.ipList(fields.ips);\n  if (typeof ips === 'string') {\n    throw new Error(ips);\n  }\n  let levels = _(fields).map((value, name) => {\n    let match = name.match(/^accessLevelBoard_(\\S+)$/);\n    if (!match || 'NONE' === value) {\n      return;\n    }\n    return {\n      boardName: match[1],\n      level: value\n    };\n  }).filter(level => !!level);\n  return {\n    levels: levels,\n    ips: ips\n  };\n}\n\nrouter.post('/action/registerUser', async function(req, res, next) {\n  try {\n    if (!req.isSuperuser()) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let { fields } = await Files.parseForm(req);\n    let { hashpass } = fields;\n    if (!hashpass) {\n      throw new Error(Tools.translate('Invalid password'));\n    }\n    let { levels, ips } = await getRegisteredUserData(fields);\n    hashpass = Tools.mayBeHashpass(hashpass) ? hashpass : Tools.toHashpass(hashpass);\n    await UsersModel.registerUser(hashpass, levels, ips);\n    res.json({ hashpass: hashpass });\n  } catch (err) {\n    next(err);\n  }\n});\n\nrouter.post('/action/updateRegisteredUser', async function(req, res, next) {\n  try {\n    if (!req.isSuperuser()) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let { fields } = await Files.parseForm(req);\n    let { hashpass } = fields;\n    if (!hashpass || !Tools.mayBeHashpass(hashpass)) {\n      throw new Error(Tools.translate('Invalid hashpass'));\n    }\n    let { levels, ips } = await getRegisteredUserData(fields);\n    await UsersModel.updateRegisteredUser(hashpass, levels, ips);\n    res.json({});\n  } catch (err) {\n    next(err);\n  }\n});\n\nrouter.post('/action/unregisterUser', async function(req, res, next) {\n  try {\n    if (!req.isSuperuser()) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let { fields: { hashpass } } = await Files.parseForm(req);\n    if (!hashpass || !Tools.mayBeHashpass(hashpass)) {\n      throw new Error(Tools.translate('Invalid hashpass'));\n    }\n    await UsersModel.unregisterUser(hashpass);\n    res.json({});\n  } catch (err) {\n    next(err);\n  }\n});\n\nrouter.post('/action/superuserAddFile', async function(req, res, next) {\n  try {\n    if (!req.isSuperuser()) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let { fields: { dir, fileName, isDir }, files } = await Files.parseForm(req);\n    if (!dir || typeof dir !== 'string') {\n      throw new Error(Tools.translate('Invalid dir'));\n    }\n    if (!fileName || typeof fileName !== 'string') {\n      throw new Error(Tools.translate('Invalid file name'));\n    }\n    await Files.createFile(dir, fileName, {\n      isDir: ('true' === isDir),\n      file: _(files).toArray()[0]\n    });\n    res.json({});\n  } catch (err) {\n    next(Tools.processError(err, true));\n  }\n});\n\nrouter.post('/action/superuserEditFile', async function(req, res, next) {\n  try {\n    if (!req.isSuperuser()) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let { fields: { fileName, content } } = await Files.parseForm(req);\n    if (!fileName || typeof fileName !== 'string') {\n      throw new Error(Tools.translate('Invalid file name'));\n    }\n    await Files.editFile(fileName, content);\n    res.json({});\n  } catch (err) {\n    next(Tools.processError(err, false));\n  }\n});\n\nrouter.post('/action/superuserRenameFile', async function(req, res, next) {\n  try {\n    if (!req.isSuperuser()) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let { fields: { oldFileName, fileName } } = await Files.parseForm(req);\n    if (!oldFileName || typeof oldFileName !== 'string' || !fileName || typeof fileName !== 'string') {\n      throw new Error(Tools.translate('Invalid file name'));\n    }\n    await Files.renameFile(oldFileName, fileName);\n    res.json({});\n  } catch (err) {\n    next(Tools.processError(err));\n  }\n});\n\nrouter.post('/action/superuserDeleteFile', async function(req, res, next) {\n  try {\n    if (!req.isSuperuser()) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let { fields: { fileName } } = await Files.parseForm(req);\n    if (!fileName || typeof fileName !== 'string') {\n      throw new Error(Tools.translate('Invalid file name'));\n    }\n    await Files.deleteFile(fileName);\n    res.json({});\n  } catch (err) {\n    next(Tools.processError(err));\n  }\n});\n\nrouter.post('/action/superuserRerender', async function(req, res, next) {\n  try {\n    if (!req.isSuperuser()) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let { fields: { targets } } = await Files.parseForm(req);\n    if (typeof targets !== 'string') {\n      throw new Error(Tools.translate('Invalid targets'));\n    }\n    if (targets) {\n      await Renderer.rerender(targets);\n    } else {\n      await Renderer.rerender();\n    }\n    res.json({});\n  } catch (err) {\n    next(Tools.processError(err));\n  }\n});\n\nrouter.post('/action/superuserMarkupPosts', async function(req, res, next) {\n  try {\n    if (!req.isSuperuser()) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let { fields: { targets } } = await Files.parseForm(req);\n    if (typeof targets !== 'string') {\n      throw new Error(Tools.translate('Invalid targets'));\n    }\n    await PostsModel.markupPosts(Renderer.targetsFromString(targets));\n    //TODO: Rerender corresponding pages?\n    res.json({});\n  } catch (err) {\n    next(Tools.processError(err));\n  }\n});\n\nrouter.post('/action/superuserReload', async function(req, res, next) {\n  try {\n    if (!req.isSuperuser()) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let { fields: { boards, templates } } = await Files.parseForm(req);\n    if ('true' === boards) {\n      await IPC.send('reloadBoards');\n    }\n    if ('true' === templates) {\n      await IPC.send('reloadTemplates');\n    }\n    res.json({});\n  } catch (err) {\n    next(Tools.processError(err));\n  }\n});\n\nexport default router;\n"]}