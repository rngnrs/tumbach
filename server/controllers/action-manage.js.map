{"version":3,"sources":["controllers/action-manage.js"],"names":["Files","Renderer","IPC","Tools","PostsModel","UsersModel","router","Router","getRegisteredUserData","fields","ips","ipList","Promise","reject","Error","levels","reduce","acc","value","name","match","post","req","res","next","isSuperuser","translate","parseForm","password","hashpass","mayBeHashpass","toHashpass","registerUser","json","updateRegisterUser","unregisterUser","dir","fileName","isDir","files","createFile","file","toArray","processError","content","editFile","oldFileName","renameFile","deleteFile","targets","archive","rerender","rerenderPosts","targetsFromString","rebuildSearchIndex","boards","templates","send"],"mappings":";;;;;;AAAA;;;;AACA;;;;AAEA;;IAAYA,K;;AACZ;;IAAYC,Q;;AACZ;;IAAYC,G;;AACZ;;IAAYC,K;;AACZ;;IAAYC,U;;AACZ;;IAAYC,U;;;;;;;;AAEZ,IAAIC,SAAS,kBAAQC,MAAR,EAAb;;AAEA,SAASC,qBAAT,CAA+BC,MAA/B,EAAuC;AACrC,MAAIC,MAAMP,MAAMQ,MAAN,CAAaF,OAAOC,GAApB,CAAV;AACA,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAC3B,WAAOE,QAAQC,MAAR,CAAe,IAAIC,KAAJ,CAAUJ,GAAV,CAAf,CAAP;AACD;AACD,MAAIK,SAAS,0BAAEN,MAAF,EAAUO,MAAV,CAAiB,UAACC,GAAD,EAAMC,KAAN,EAAaC,IAAb,EAAsB;AAClD,QAAIC,QAAQD,KAAKC,KAAL,CAAW,0BAAX,CAAZ;AACA,QAAIA,SAAS,WAAWF,KAAxB,EAA+B;AAC7BD,UAAIG,MAAM,CAAN,CAAJ,IAAgBF,KAAhB;AACD;AACD,WAAOD,GAAP;AACD,GANY,CAAb;AAOA,SAAO;AACLF,YAAQA,MADH;AAELL,SAAKA;AAFA,GAAP;AAID;;AAEDJ,OAAOe,IAAP,CAAY,sBAAZ;AAAA,uDAAoC,iBAAeC,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,gBAE3BF,IAAIG,WAAJ,EAF2B;AAAA;AAAA;AAAA;;AAAA,kBAGxB,IAAIX,KAAJ,CAAUX,MAAMuB,SAAN,CAAgB,mBAAhB,CAAV,CAHwB;;AAAA;AAAA;AAAA,mBAKT1B,MAAM2B,SAAN,CAAgBL,GAAhB,CALS;;AAAA;AAAA;AAK1Bb,kBAL0B,SAK1BA,MAL0B;AAM1BmB,oBAN0B,GAMbnB,MANa,CAM1BmB,QAN0B;;AAAA,gBAO3BA,QAP2B;AAAA;AAAA;AAAA;;AAAA,kBAQxB,IAAId,KAAJ,CAAUX,MAAMuB,SAAN,CAAgB,kBAAhB,CAAV,CARwB;;AAAA;AAAA,oCAUVlB,sBAAsBC,MAAtB,CAVU;AAU1BM,kBAV0B,yBAU1BA,MAV0B;AAUlBL,eAVkB,yBAUlBA,GAVkB;AAW5BmB,oBAX4B,GAWjB1B,MAAM2B,aAAN,CAAoBF,QAApB,IAAgCA,QAAhC,GAA2CzB,MAAM4B,UAAN,CAAiBH,QAAjB,CAX1B;AAAA;AAAA,mBAY1BvB,WAAW2B,YAAX,CAAwBH,QAAxB,EAAkCd,MAAlC,EAA0CL,GAA1C,CAZ0B;;AAAA;AAahCa,gBAAIU,IAAJ,CAAS,EAAEJ,UAAUA,QAAZ,EAAT;AAbgC;AAAA;;AAAA;AAAA;AAAA;;AAehCL;;AAfgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApC;;AAAA;AAAA;AAAA;AAAA;;AAmBAlB,OAAOe,IAAP,CAAY,8BAAZ;AAAA,wDAA4C,kBAAeC,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,gBAEnCF,IAAIG,WAAJ,EAFmC;AAAA;AAAA;AAAA;;AAAA,kBAGhC,IAAIX,KAAJ,CAAUX,MAAMuB,SAAN,CAAgB,mBAAhB,CAAV,CAHgC;;AAAA;AAAA;AAAA,mBAKjB1B,MAAM2B,SAAN,CAAgBL,GAAhB,CALiB;;AAAA;AAAA;AAKlCb,kBALkC,SAKlCA,MALkC;AAMlCoB,oBANkC,GAMrBpB,MANqB,CAMlCoB,QANkC;;AAAA,kBAOpC,CAACA,QAAD,IAAa,CAAC1B,MAAM2B,aAAN,CAAoBD,QAApB,CAPsB;AAAA;AAAA;AAAA;;AAAA,kBAQhC,IAAIf,KAAJ,CAAUX,MAAMuB,SAAN,CAAgB,kBAAhB,CAAV,CARgC;;AAAA;AAAA,qCAUlBlB,sBAAsBC,MAAtB,CAVkB;AAUlCM,kBAVkC,0BAUlCA,MAVkC;AAU1BL,eAV0B,0BAU1BA,GAV0B;AAAA;AAAA,mBAWlCL,WAAW6B,kBAAX,CAA8BL,QAA9B,EAAwCd,MAAxC,EAAgDL,GAAhD,CAXkC;;AAAA;AAYxCa,gBAAIU,IAAJ,CAAS,EAAT;AAZwC;AAAA;;AAAA;AAAA;AAAA;;AAcxCT;;AAdwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5C;;AAAA;AAAA;AAAA;AAAA;;AAkBAlB,OAAOe,IAAP,CAAY,wBAAZ;AAAA,wDAAsC,kBAAeC,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,gBAE7BF,IAAIG,WAAJ,EAF6B;AAAA;AAAA;AAAA;;AAAA,kBAG1B,IAAIX,KAAJ,CAAUX,MAAMuB,SAAN,CAAgB,mBAAhB,CAAV,CAH0B;;AAAA;AAAA;AAAA,mBAKG1B,MAAM2B,SAAN,CAAgBL,GAAhB,CALH;;AAAA;AAAA;AAKlBO,oBALkB,SAK5BpB,MAL4B,CAKlBoB,QALkB;;AAAA,kBAM9B,CAACA,QAAD,IAAa,CAAC1B,MAAM2B,aAAN,CAAoBD,QAApB,CANgB;AAAA;AAAA;AAAA;;AAAA,kBAO1B,IAAIf,KAAJ,CAAUX,MAAMuB,SAAN,CAAgB,kBAAhB,CAAV,CAP0B;;AAAA;AAAA;AAAA,mBAS5BrB,WAAW8B,cAAX,CAA0BN,QAA1B,CAT4B;;AAAA;AAUlCN,gBAAIU,IAAJ,CAAS,EAAT;AAVkC;AAAA;;AAAA;AAAA;AAAA;;AAYlCT;;AAZkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtC;;AAAA;AAAA;AAAA;AAAA;;AAgBAlB,OAAOe,IAAP,CAAY,0BAAZ;AAAA,wDAAwC,kBAAeC,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,gBAE/BF,IAAIG,WAAJ,EAF+B;AAAA;AAAA;AAAA;;AAAA,kBAG5B,IAAIX,KAAJ,CAAUX,MAAMuB,SAAN,CAAgB,mBAAhB,CAAV,CAH4B;;AAAA;AAAA;AAAA,mBAKoB1B,MAAM2B,SAAN,CAAgBL,GAAhB,CALpB;;AAAA;AAAA;AAAA,iCAK9Bb,MAL8B;AAKpB2B,eALoB,gBAKpBA,GALoB;AAKfC,oBALe,gBAKfA,QALe;AAKLC,iBALK,gBAKLA,KALK;AAKIC,iBALJ,SAKIA,KALJ;;AAAA,kBAMhC,CAACH,GAAD,IAAQ,OAAOA,GAAP,KAAe,QANS;AAAA;AAAA;AAAA;;AAAA,kBAO5B,IAAItB,KAAJ,CAAUX,MAAMuB,SAAN,CAAgB,aAAhB,CAAV,CAP4B;;AAAA;AAAA,kBAShC,CAACW,QAAD,IAAa,OAAOA,QAAP,KAAoB,QATD;AAAA;AAAA;AAAA;;AAAA,kBAU5B,IAAIvB,KAAJ,CAAUX,MAAMuB,SAAN,CAAgB,mBAAhB,CAAV,CAV4B;;AAAA;AAAA;AAAA,mBAY9B1B,MAAMwC,UAAN,CAAiBJ,GAAjB,EAAsBC,QAAtB,EAAgC;AACpCC,qBAAQ,WAAWA,KADiB;AAEpCG,oBAAM,0BAAEF,KAAF,EAASG,OAAT,GAAmB,CAAnB;AAF8B,aAAhC,CAZ8B;;AAAA;AAgBpCnB,gBAAIU,IAAJ,CAAS,EAAT;AAhBoC;AAAA;;AAAA;AAAA;AAAA;;AAkBpCT,iBAAKrB,MAAMwC,YAAN,eAAwB,IAAxB,CAAL;;AAlBoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxC;;AAAA;AAAA;AAAA;AAAA;;AAsBArC,OAAOe,IAAP,CAAY,2BAAZ;AAAA,wDAAyC,kBAAeC,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,gBAEhCF,IAAIG,WAAJ,EAFgC;AAAA;AAAA;AAAA;;AAAA,kBAG7B,IAAIX,KAAJ,CAAUX,MAAMuB,SAAN,CAAgB,mBAAhB,CAAV,CAH6B;;AAAA;AAAA;AAAA,mBAKS1B,MAAM2B,SAAN,CAAgBL,GAAhB,CALT;;AAAA;AAAA;AAAA,mCAK/Bb,MAL+B;AAKrB4B,oBALqB,iBAKrBA,QALqB;AAKXO,mBALW,iBAKXA,OALW;;AAAA,kBAMjC,CAACP,QAAD,IAAa,OAAOA,QAAP,KAAoB,QANA;AAAA;AAAA;AAAA;;AAAA,kBAO7B,IAAIvB,KAAJ,CAAUX,MAAMuB,SAAN,CAAgB,mBAAhB,CAAV,CAP6B;;AAAA;AAAA;AAAA,mBAS/B1B,MAAM6C,QAAN,CAAeR,QAAf,EAAyBO,OAAzB,CAT+B;;AAAA;AAUrCrB,gBAAIU,IAAJ,CAAS,EAAT;AAVqC;AAAA;;AAAA;AAAA;AAAA;;AAYrCT,iBAAKrB,MAAMwC,YAAN,eAAwB,KAAxB,CAAL;;AAZqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzC;;AAAA;AAAA;AAAA;AAAA;;AAgBArC,OAAOe,IAAP,CAAY,6BAAZ;AAAA,yDAA2C,kBAAeC,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,gBAElCF,IAAIG,WAAJ,EAFkC;AAAA;AAAA;AAAA;;AAAA,kBAG/B,IAAIX,KAAJ,CAAUX,MAAMuB,SAAN,CAAgB,mBAAhB,CAAV,CAH+B;;AAAA;AAAA;AAAA,mBAKW1B,MAAM2B,SAAN,CAAgBL,GAAhB,CALX;;AAAA;AAAA;AAAA,mCAKjCb,MALiC;AAKvBqC,uBALuB,iBAKvBA,WALuB;AAKVT,oBALU,iBAKVA,QALU;;AAAA,kBAMnC,CAACS,WAAD,IAAgB,OAAOA,WAAP,KAAuB,QAAvC,IAAmD,CAACT,QAApD,IAAgE,OAAOA,QAAP,KAAoB,QANjD;AAAA;AAAA;AAAA;;AAAA,kBAO/B,IAAIvB,KAAJ,CAAUX,MAAMuB,SAAN,CAAgB,mBAAhB,CAAV,CAP+B;;AAAA;AAAA;AAAA,mBASjC1B,MAAM+C,UAAN,CAAiBD,WAAjB,EAA8BT,QAA9B,CATiC;;AAAA;AAUvCd,gBAAIU,IAAJ,CAAS,EAAT;AAVuC;AAAA;;AAAA;AAAA;AAAA;;AAYvCT,iBAAKrB,MAAMwC,YAAN,cAAL;;AAZuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3C;;AAAA;AAAA;AAAA;AAAA;;AAgBArC,OAAOe,IAAP,CAAY,6BAAZ;AAAA,yDAA2C,kBAAeC,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,gBAElCF,IAAIG,WAAJ,EAFkC;AAAA;AAAA;AAAA;;AAAA,kBAG/B,IAAIX,KAAJ,CAAUX,MAAMuB,SAAN,CAAgB,mBAAhB,CAAV,CAH+B;;AAAA;AAAA;AAAA,mBAKF1B,MAAM2B,SAAN,CAAgBL,GAAhB,CALE;;AAAA;AAAA;AAKvBe,oBALuB,UAKjC5B,MALiC,CAKvB4B,QALuB;;AAAA,kBAMnC,CAACA,QAAD,IAAa,OAAOA,QAAP,KAAoB,QANE;AAAA;AAAA;AAAA;;AAAA,kBAO/B,IAAIvB,KAAJ,CAAUX,MAAMuB,SAAN,CAAgB,mBAAhB,CAAV,CAP+B;;AAAA;AAAA;AAAA,mBASjC1B,MAAMgD,UAAN,CAAiBX,QAAjB,CATiC;;AAAA;AAUvCd,gBAAIU,IAAJ,CAAS,EAAT;AAVuC;AAAA;;AAAA;AAAA;AAAA;;AAYvCT,iBAAKrB,MAAMwC,YAAN,cAAL;;AAZuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3C;;AAAA;AAAA;AAAA;AAAA;;AAgBArC,OAAOe,IAAP,CAAY,2BAAZ;AAAA,yDAAyC,kBAAeC,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,gBAEhCF,IAAIG,WAAJ,EAFgC;AAAA;AAAA;AAAA;;AAAA,kBAG7B,IAAIX,KAAJ,CAAUX,MAAMuB,SAAN,CAAgB,mBAAhB,CAAV,CAH6B;;AAAA;AAAA;AAAA,mBAKQ1B,MAAM2B,SAAN,CAAgBL,GAAhB,CALR;;AAAA;AAAA;AAAA,mCAK/Bb,MAL+B;AAKrBwC,oBALqB,iBAKrBA,OALqB;AAKZC,mBALY,iBAKZA,OALY;;AAAA,kBAMjC,OAAOD,QAAP,KAAmB,QANc;AAAA;AAAA;AAAA;;AAAA,kBAO7B,IAAInC,KAAJ,CAAUX,MAAMuB,SAAN,CAAgB,iBAAhB,CAAV,CAP6B;;AAAA;AAAA,iBASjCuB,QATiC;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAU7BhD,SAASkD,QAAT,CAAkBF,QAAlB,CAV6B;;AAAA;AAAA;AAAA;;AAAA;AAAA,kBAW1B,WAAWC,OAXe;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAY7BjD,SAASkD,QAAT,EAZ6B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAc7BlD,SAASkD,QAAT,CAAkB,CAAC,IAAD,EAAO,YAAP,CAAlB,CAd6B;;AAAA;AAgBrC5B,gBAAIU,IAAJ,CAAS,EAAT;AAhBqC;AAAA;;AAAA;AAAA;AAAA;;AAkBrCT,iBAAKrB,MAAMwC,YAAN,cAAL;;AAlBqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzC;;AAAA;AAAA;AAAA;AAAA;;AAsBArC,OAAOe,IAAP,CAAY,gCAAZ;AAAA,yDAA8C,kBAAeC,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,gBAErCF,IAAIG,WAAJ,EAFqC;AAAA;AAAA;AAAA;;AAAA,kBAGlC,IAAIX,KAAJ,CAAUX,MAAMuB,SAAN,CAAgB,mBAAhB,CAAV,CAHkC;;AAAA;AAAA;AAAA,mBAKN1B,MAAM2B,SAAN,CAAgBL,GAAhB,CALM;;AAAA;AAAA;AAK1B2B,qBAL0B,UAKpCxC,MALoC,CAK1BwC,OAL0B;;AAAA,kBAMtC,OAAOA,SAAP,KAAmB,QANmB;AAAA;AAAA;AAAA;;AAAA,kBAOlC,IAAInC,KAAJ,CAAUX,MAAMuB,SAAN,CAAgB,iBAAhB,CAAV,CAPkC;;AAAA;AAAA;AAAA,mBASpCtB,WAAWgD,aAAX,CAAyBnD,SAASoD,iBAAT,CAA2BJ,SAA3B,CAAzB,CAToC;;AAAA;AAU1C;AACA1B,gBAAIU,IAAJ,CAAS,EAAT;AAX0C;AAAA;;AAAA;AAAA;AAAA;;AAa1CT,iBAAKrB,MAAMwC,YAAN,cAAL;;AAb0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9C;;AAAA;AAAA;AAAA;AAAA;;AAiBArC,OAAOe,IAAP,CAAY,qCAAZ;AAAA,yDAAmD,mBAAeC,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,gBAE1CF,IAAIG,WAAJ,EAF0C;AAAA;AAAA;AAAA;;AAAA,kBAGvC,IAAIX,KAAJ,CAAUX,MAAMuB,SAAN,CAAgB,mBAAhB,CAAV,CAHuC;;AAAA;AAAA;AAAA,mBAKX1B,MAAM2B,SAAN,CAAgBL,GAAhB,CALW;;AAAA;AAAA;AAK/B2B,qBAL+B,UAKzCxC,MALyC,CAK/BwC,OAL+B;;AAAA,kBAM3C,OAAOA,SAAP,KAAmB,QANwB;AAAA;AAAA;AAAA;;AAAA,kBAOvC,IAAInC,KAAJ,CAAUX,MAAMuB,SAAN,CAAgB,iBAAhB,CAAV,CAPuC;;AAAA;AAAA;AAAA,mBASzCtB,WAAWkD,kBAAX,CAA8BrD,SAASoD,iBAAT,CAA2BJ,SAA3B,CAA9B,CATyC;;AAAA;AAU/C1B,gBAAIU,IAAJ,CAAS,EAAT;AAV+C;AAAA;;AAAA;AAAA;AAAA;;AAY/CT,iBAAKrB,MAAMwC,YAAN,eAAL;;AAZ+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnD;;AAAA;AAAA;AAAA;AAAA;;AAgBArC,OAAOe,IAAP,CAAY,yBAAZ;AAAA,yDAAuC,mBAAeC,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,gBAE9BF,IAAIG,WAAJ,EAF8B;AAAA;AAAA;AAAA;;AAAA,kBAG3B,IAAIX,KAAJ,CAAUX,MAAMuB,SAAN,CAAgB,mBAAhB,CAAV,CAH2B;;AAAA;AAAA;AAAA,mBAKW1B,MAAM2B,SAAN,CAAgBL,GAAhB,CALX;;AAAA;AAAA;AAAA,mCAK7Bb,MAL6B;AAKnB8C,kBALmB,iBAKnBA,MALmB;AAKXC,qBALW,iBAKXA,SALW;;AAAA,kBAM/B,OAAOP,OAAP,KAAmB,QANY;AAAA;AAAA;AAAA;;AAAA,kBAO3B,IAAInC,KAAJ,CAAUX,MAAMuB,SAAN,CAAgB,iBAAhB,CAAV,CAP2B;;AAAA;AAAA,kBAS/B,WAAW6B,MAToB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAU3BrD,IAAIuD,IAAJ,CAAS,cAAT,CAV2B;;AAAA;AAAA,kBAY/B,WAAWD,SAZoB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAa3BtD,IAAIuD,IAAJ,CAAS,iBAAT,CAb2B;;AAAA;AAenClC,gBAAIU,IAAJ,CAAS,EAAT;AAfmC;AAAA;;AAAA;AAAA;AAAA;;AAiBnCT,iBAAKrB,MAAMwC,YAAN,eAAL;;AAjBmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvC;;AAAA;AAAA;AAAA;AAAA;;kBAqBerC,M","file":"controllers/action-manage.js","sourcesContent":["import _ from 'underscore';\nimport express from 'express';\n\nimport * as Files from '../core/files';\nimport * as Renderer from '../core/renderer';\nimport * as IPC from '../helpers/ipc';\nimport * as Tools from '../helpers/tools';\nimport * as PostsModel from '../models/posts';\nimport * as UsersModel from '../models/users';\n\nlet router = express.Router();\n\nfunction getRegisteredUserData(fields) {\n  let ips = Tools.ipList(fields.ips);\n  if (typeof ips === 'string') {\n    return Promise.reject(new Error(ips));\n  }\n  let levels = _(fields).reduce((acc, value, name) => {\n    let match = name.match(/^accessLevelBoard_(\\S+)$/);\n    if (match && 'NONE' !== value) {\n      acc[match[1]] = value;\n    }\n    return acc;\n  });\n  return {\n    levels: levels,\n    ips: ips\n  };\n}\n\nrouter.post('/action/registerUser', async function(req, res, next) {\n  try {\n    if (!req.isSuperuser()) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let { fields } = await Files.parseForm(req);\n    let { password } = fields;\n    if (!password) {\n      throw new Error(Tools.translate('Invalid password'));\n    }\n    let { levels, ips } = getRegisteredUserData(fields);\n    let hashpass = Tools.mayBeHashpass(password) ? password : Tools.toHashpass(password);\n    await UsersModel.registerUser(hashpass, levels, ips);\n    res.json({ hashpass: hashpass });\n  } catch (err) {\n    next(err);\n  }\n});\n\nrouter.post('/action/updateRegisteredUser', async function(req, res, next) {\n  try {\n    if (!req.isSuperuser()) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let { fields } = await Files.parseForm(req);\n    let { hashpass } = fields;\n    if (!hashpass || !Tools.mayBeHashpass(hashpass)) {\n      throw new Error(Tools.translate('Invalid hashpass'));\n    }\n    let { levels, ips } = getRegisteredUserData(fields);\n    await UsersModel.updateRegisterUser(hashpass, levels, ips);\n    res.json({});\n  } catch (err) {\n    next(err);\n  }\n});\n\nrouter.post('/action/unregisterUser', async function(req, res, next) {\n  try {\n    if (!req.isSuperuser()) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let { fields: { hashpass } } = await Files.parseForm(req);\n    if (!hashpass || !Tools.mayBeHashpass(hashpass)) {\n      throw new Error(Tools.translate('Invalid hashpass'));\n    }\n    await UsersModel.unregisterUser(hashpass);\n    res.json({});\n  } catch (err) {\n    next(err);\n  }\n});\n\nrouter.post('/action/superuserAddFile', async function(req, res, next) {\n  try {\n    if (!req.isSuperuser()) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let { fields: { dir, fileName, isDir }, files } = await Files.parseForm(req);\n    if (!dir || typeof dir !== 'string') {\n      throw new Error(Tools.translate('Invalid dir'));\n    }\n    if (!fileName || typeof fileName !== 'string') {\n      throw new Error(Tools.translate('Invalid file name'));\n    }\n    await Files.createFile(dir, fileName, {\n      isDir: ('true' === isDir),\n      file: _(files).toArray()[0]\n    });\n    res.json({});\n  } catch (err) {\n    next(Tools.processError(err, true));\n  }\n});\n\nrouter.post('/action/superuserEditFile', async function(req, res, next) {\n  try {\n    if (!req.isSuperuser()) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let { fields: { fileName, content } } = await Files.parseForm(req);\n    if (!fileName || typeof fileName !== 'string') {\n      throw new Error(Tools.translate('Invalid file name'));\n    }\n    await Files.editFile(fileName, content);\n    res.json({});\n  } catch (err) {\n    next(Tools.processError(err, false));\n  }\n});\n\nrouter.post('/action/superuserRenameFile', async function(req, res, next) {\n  try {\n    if (!req.isSuperuser()) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let { fields: { oldFileName, fileName } } = await Files.parseForm(req);\n    if (!oldFileName || typeof oldFileName !== 'string' || !fileName || typeof fileName !== 'string') {\n      throw new Error(Tools.translate('Invalid file name'));\n    }\n    await Files.renameFile(oldFileName, fileName);\n    res.json({});\n  } catch (err) {\n    next(Tools.processError(err));\n  }\n});\n\nrouter.post('/action/superuserDeleteFile', async function(req, res, next) {\n  try {\n    if (!req.isSuperuser()) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let { fields: { fileName } } = await Files.parseForm(req);\n    if (!fileName || typeof fileName !== 'string') {\n      throw new Error(Tools.translate('Invalid file name'));\n    }\n    await Files.deleteFile(fileName);\n    res.json({});\n  } catch (err) {\n    next(Tools.processError(err));\n  }\n});\n\nrouter.post('/action/superuserRerender', async function(req, res, next) {\n  try {\n    if (!req.isSuperuser()) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let { fields: { targets, archive } } = await Files.parseForm(req);\n    if (typeof targets !== 'string') {\n      throw new Error(Tools.translate('Invalid targets'));\n    }\n    if (targets) {\n      await Renderer.rerender(targets);\n    } else if ('true' === archive) {\n      await Renderer.rerender();\n    } else {\n      await Renderer.rerender(['**', '!/*/arch/*']);\n    }\n    res.json({});\n  } catch (err) {\n    next(Tools.processError(err));\n  }\n});\n\nrouter.post('/action/superuserRerenderPosts', async function(req, res, next) {\n  try {\n    if (!req.isSuperuser()) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let { fields: { targets } } = await Files.parseForm(req);\n    if (typeof targets !== 'string') {\n      throw new Error(Tools.translate('Invalid targets'));\n    }\n    await PostsModel.rerenderPosts(Renderer.targetsFromString(targets));\n    //TODO: Rerender corresponding pages?\n    res.json({});\n  } catch (err) {\n    next(Tools.processError(err));\n  }\n});\n\nrouter.post('/action/superuserRebuildSearchIndex', async function(req, res, next) {\n  try {\n    if (!req.isSuperuser()) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let { fields: { targets } } = await Files.parseForm(req);\n    if (typeof targets !== 'string') {\n      throw new Error(Tools.translate('Invalid targets'));\n    }\n    await PostsModel.rebuildSearchIndex(Renderer.targetsFromString(targets));\n    res.json({});\n  } catch (err) {\n    next(Tools.processError(err));\n  }\n});\n\nrouter.post('/action/superuserReload', async function(req, res, next) {\n  try {\n    if (!req.isSuperuser()) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let { fields: { boards, templates } } = await Files.parseForm(req);\n    if (typeof targets !== 'string') {\n      throw new Error(Tools.translate('Invalid targets'));\n    }\n    if ('true' === boards) {\n      await IPC.send('reloadBoards');\n    }\n    if ('true' === templates) {\n      await IPC.send('reloadTemplates');\n    }\n    res.json({});\n  } catch (err) {\n    next(Tools.processError(err));\n  }\n});\n\nexport default router;\n"],"sourceRoot":"/source/"}