{"version":3,"sources":["controllers/action-moder.js"],"names":["Files","Tools","ThreadsModel","UsersModel","router","Router","MIN_TIME_OFFSET","MAX_TIME_OFFSET","BAN_EXPIRES_FORMAT","MIN_SUBNET_IP_V4","MAX_SUBNET_IP_V4","MIN_SUBNET_IP_V6","MAX_SUBNET_IP_V6","getBans","fields","timeOffset","bans","pick","value","name","test","option","o","reduce","acc","expiresAt","hours","Math","floor","abs","minutes","tz","pad","now","SECOND","boardName","level","reason","postNumber","testPostNumber","post","req","res","next","isModer","Error","translate","parseForm","userIp","subnet","correctAddress","isIPv4","r4","r6","t","ip","banLevels","BAN_LEVELS","slice","each","ban","board","indexOf","getBannedUser","bannedUser","oldBans","date","modifiedBanBoards","Set","newBans","boardNames","hasOwnProperty","createdAt","add","getRegisteredUserLevelsByIp","levels","forEach","isSuperuser","compareRegisteredUserLevels","banUser","json","filter","key","length","geolocationInfo","checkUserBan","write","BoardsModel","delall","transaction","threadNumber","targetBoardName","password","checkUserPermissions","sha1","moveThread","result","rollback","fixed","setThreadFixed","closed","setThreadClosed","unbumpable","setThreadUnbumpable"],"mappings":"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","file":"controllers/action-moder.js","sourcesContent":["import _ from 'underscore';\nimport express from 'express';\nimport moment from 'moment';\n\nimport Board from '../boards/board';\nimport config from '../helpers/config';\nimport * as Files from '../core/files';\nimport geolocation from '../core/geolocation';\nimport PostCreationTransaction from '../helpers/post-creation-transaction';\nimport * as Tools from '../helpers/tools';\nimport * as ThreadsModel from '../models/threads';\nimport * as UsersModel from '../models/users';\n\nlet router = express.Router();\n\nconst MIN_TIME_OFFSET = -720;\nconst MAX_TIME_OFFSET = 840;\nconst BAN_EXPIRES_FORMAT = 'YYYY/MM/DD HH:mm ZZ';\nconst MIN_SUBNET_IP_V4 = 22;\nconst MAX_SUBNET_IP_V4 = 32;\nconst MIN_SUBNET_IP_V6 = 64;\nconst MAX_SUBNET_IP_V6 = 128;\n\nfunction getBans(fields) {\n  let { timeOffset } = fields;\n  let bans = _(fields).pick((value, name) => {\n    return /^banBoard_\\S+$/.test(name) && 'NONE' !== fields[`banLevel_${value}`];\n  });\n  timeOffset = Tools.option(timeOffset, 'number', config('site.timeOffset'), {\n    test: (o) => { return (o >= MIN_TIME_OFFSET) && (o <= MAX_TIME_OFFSET); }\n  });\n  return _(bans).reduce((acc, value, name) => {\n    let expiresAt = fields[`banExpires_${value}`];\n    if (expiresAt) {\n      let hours = Math.floor(Math.abs(timeOffset) / 60);\n      let minutes = Math.abs(timeOffset) % 60;\n      let tz = ((timeOffset > 0) ? '+' : '') + Tools.pad(hours, 2, '0') + ':' + Tools.pad(minutes, 2, '0');\n      expiresAt = +moment(`${expiresAt} ${tz}`, BAN_EXPIRES_FORMAT);\n      if (expiresAt < (_.now() + Tools.SECOND)) {\n        expiresAt = null;\n      }\n    } else {\n      expiresAt = null;\n    }\n    acc[value] = {\n      boardName: value,\n      expiresAt: expiresAt,\n      level: fields[`banLevel_${value}`],\n      reason: fields[`banReason_${value}`],\n      postNumber: Tools.option(fields[`banPostNumber_${value}`], 'number', null, { test: Tools.testPostNumber })\n    };\n    return acc;\n  }, {});\n}\n\nrouter.post('/action/banUser', async function(req, res, next) {\n  try {\n    if (!req.isModer()) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let { fields } = await Files.parseForm(req);\n    let { userIp, subnet } = fields;\n    userIp = Tools.correctAddress(userIp);\n    if (!userIp) {\n      throw new Error(Tools.translate('Invalid IP address'));\n    }\n    subnet = Tools.subnet(userIp, subnet);\n    if (subnet) {\n      let isIPv4 = /^\\:\\:[0-9a-f]{1,4}\\:[0-9a-f]{1,4}$/.test(userIp);\n      if ((isIPv4 && (subnet.subnet < MIN_SUBNET_IP_V4)) || (!isIPv4 && (subnet.subnet < MIN_SUBNET_IP_V6))) {\n        let r4 = `${MIN_SUBNET_IP_V4}-${MAX_SUBNET_IP_V4}`;\n        let r6 = `${MIN_SUBNET_IP_V6}-${MAX_SUBNET_IP_V6}`;\n        let t = Tools.translate('Subnet is too large. $[1] for IPv4 and $[2] for IPv6 are allowed', '', r4, r6);\n        throw new Error(t);\n      }\n    }\n    if (userIp === req.ip) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let bans = getBans(fields);\n    let banLevels = Tools.BAN_LEVELS.slice(1);\n    _(bans).each((ban) => {\n      if (!Board.board(ban.boardName)) {\n        throw new Error(Tools.translate('Invalid board: $[1]', '', ban.boardName));\n      }\n      if (banLevels.indexOf(ban.level) < 0) {\n        throw new Error(Tools.translate('Invalid ban level: $[1]', '', ban.level));\n      }\n    });\n    let bannedUser = await UsersModel.getBannedUser(userIp);\n    let oldBans = bannedUser ? bannedUser.bans : {};\n    let date = Tools.now();\n    let modifiedBanBoards = new Set();\n    let newBans = Board.boardNames().reduce((acc, boardName) => {\n      if (req.isModer(boardName)) {\n        if (bans.hasOwnProperty(boardName)) {\n          let ban = bans[boardName];\n          ban.createdAt = date;\n          acc[boardName] = ban;\n          modifiedBanBoards.add(boardName);\n        } else if (oldBans.hasOwnProperty(boardName)) {\n          modifiedBanBoards.add(boardName);\n        }\n      } else if (oldBans.hasOwnProperty(boardName)) {\n        acc[boardName] = oldBans[boardName];\n      }\n      return acc;\n    }, {});\n    let levels = await UsersModel.getRegisteredUserLevelsByIp(userIp, subnet);\n    modifiedBanBoards.forEach((boardName) => {\n      let level = req.level(boardName);\n      if (!req.isSuperuser(boardName) && Tools.compareRegisteredUserLevels(level, levels[boardName]) <= 0) {\n        throw new Error(Tools.translate('Not enough rights'));\n      }\n    });\n    await UsersModel.banUser(userIp, newBans, subnet);\n    res.json({});\n  } catch (err) {\n    next(err);\n  }\n});\n\nrouter.post('/action/delall', async function(req, res, next) {\n  try {\n    if (!req.isModer()) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let { fields } = await Files.parseForm(req);\n    let { userIp } = fields;\n    userIp = Tools.correctAddress(userIp);\n    if (!userIp) {\n      throw new Error(Tools.translate('Invalid IP address'));\n    }\n    if (userIp === req.ip) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let boardNames = _(fields).filter((boardName, key) => {\n      return /^board_\\S+$/.test(key);\n    });\n    if (boardNames.length <= 0) {\n      throw new Error(Tools.translate('No board specified'));\n    }\n    boardNames.forEach((boardName) => {\n      if (!Board.board(boardName)) {\n        throw new Error(Tools.translate('Invalid board'));\n      }\n      if (!req.isModer(boardName)) {\n        throw new Error(Tools.translate('Not enough rights'));\n      }\n    });\n    let geolocationInfo = await geolocation(req.ip);\n    await UsersModel.checkUserBan(req.ip, boardNames, {\n      write: true,\n      geolocationInfo: geolocationInfo\n    });\n    await BoardsModel.delall(req, userIp, boardNames);\n    res.json({});\n  } catch (err) {\n    next(err);\n  }\n});\n\nrouter.post('/action/moveThread', async function(req, res, next) {\n  let transaction;\n  try {\n    let { fields } = await Files.parseForm(req);\n    let { boardName, threadNumber, targetBoardName, password } = fields;\n    if (!Board.board(boardName) || !Board.board(targetBoardName)) {\n      throw new Error(Tools.translate('Invalid board'));\n    }\n    if (boardName === targetBoardName) {\n      throw new Error(Tools.translate('Source and target boards are the same'));\n    }\n    threadNumber = Tools.option(threadNumber, 'number', 0, { test: Tools.testPostNumber });\n    if (!threadNumber) {\n      throw new Error(Tools.translate('Invalid thread number'));\n    }\n    if (!req.isModer(boardName) || !req.isModer(targetBoardName)) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let geolocationInfo = await geolocation(req.ip);\n    await UsersModel.checkUserBan(req.ip, [boardName, targetBoardName], {\n      write: true,\n      geolocationInfo: geolocationInfo\n    });\n    await UsersModel.checkUserPermissions(req, boardName, threadNumber, 'moveThread', Tools.sha1(password));\n    transaction = new PostCreationTransaction(boardName);\n    let result = await ThreadsModel.moveThread(boardName, threadNumber, targetBoardName, transaction);\n    res.json(result);\n  } catch (err) {\n    if (transaction) {\n      transaction.rollback();\n    }\n    next(err);\n  }\n});\n\nrouter.post('/action/setThreadFixed', async function(req, res, next) {\n  try {\n    let { fields } = await Files.parseForm(req);\n    let { boardName, threadNumber, fixed, password } = fields;\n    if (!Board.board(boardName)) {\n      throw new Error(Tools.translate('Invalid board'));\n    }\n    threadNumber = Tools.option(threadNumber, 'number', 0, { test: Tools.testPostNumber });\n    if (!threadNumber) {\n      throw new Error(Tools.translate('Invalid thread number'));\n    }\n    if (!req.isModer(boardName)) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let geolocationInfo = await geolocation(req.ip);\n    await UsersModel.checkUserBan(req.ip, boardName, {\n      write: true,\n      geolocationInfo: geolocationInfo\n    });\n    await UsersModel.checkUserPermissions(req, boardName, threadNumber, 'setThreadFixed', Tools.sha1(password));\n    await ThreadsModel.setThreadFixed(boardName, threadNumber, 'true' === fixed);\n    res.json({});\n  } catch (err) {\n    next(err);\n  }\n});\n\nrouter.post('/action/setThreadClosed', async function(req, res, next) {\n  try {\n    let { fields } = await Files.parseForm(req);\n    let { boardName, threadNumber, closed, password } = fields;\n    if (!Board.board(boardName)) {\n      throw new Error(Tools.translate('Invalid board'));\n    }\n    threadNumber = Tools.option(threadNumber, 'number', 0, { test: Tools.testPostNumber });\n    if (!threadNumber) {\n      throw new Error(Tools.translate('Invalid thread number'));\n    }\n    if (!req.isModer(boardName)) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let geolocationInfo = await geolocation(req.ip);\n    await UsersModel.checkUserBan(req.ip, boardName, {\n      write: true,\n      geolocationInfo: geolocationInfo\n    });\n    await UsersModel.checkUserPermissions(req, boardName, threadNumber, 'setThreadClosed', Tools.sha1(password));\n    await ThreadsModel.setThreadClosed(boardName, threadNumber, 'true' === closed);\n    res.json({});\n  } catch (err) {\n    next(err);\n  }\n});\n\nrouter.post('/action/setThreadUnbumpable', async function(req, res, next) {\n  try {\n    let { fields } = await Files.parseForm(req);\n    let { boardName, threadNumber, unbumpable, password } = fields;\n    if (!Board.board(boardName)) {\n      throw new Error(Tools.translate('Invalid board'));\n    }\n    threadNumber = Tools.option(threadNumber, 'number', 0, { test: Tools.testPostNumber });\n    if (!threadNumber) {\n      throw new Error(Tools.translate('Invalid thread number'));\n    }\n    if (!req.isModer(boardName)) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let geolocationInfo = await geolocation(req.ip);\n    await UsersModel.checkUserBan(req.ip, boardName, {\n      write: true,\n      geolocationInfo: geolocationInfo\n    });\n    await UsersModel.checkUserPermissions(req, boardName, threadNumber, 'setThreadUnbumpable', Tools.sha1(password));\n    await ThreadsModel.setThreadUnbumpable(boardName, threadNumber, 'true' === unbumpable);\n    res.json({});\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;\n"],"sourceRoot":"/source/"}