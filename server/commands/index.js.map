{"version":3,"sources":["commands/index.js"],"names":["commands","Tools","vorpal","require","setupMethods","command","prompt","options","Promise","resolve","reject","simple","message","name","call","result","input","requestPassword","type","translate","password","Error","mayBeHashpass","default","notHashpass","hashpass","installHandler","handler","description","alias","undefined","action","args","callback","console","log","stack","cancel","isArray","forEach","option","value","find","remove","loadPlugins","__dirname","fileName","_1","_2","path","split","filter","plugin","delimiter","show"],"mappings":"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","file":"commands/index.js","sourcesContent":["import _ from 'underscore';\n\nimport config from '../helpers/config';\nimport * as Tools from '../helpers/tools';\n\nlet vorpal = require('vorpal')();\n\nfunction setupMethods(command) {\n  let prompt = command.prompt;\n\n  command.prompt = async function(options) {\n    return new Promise((resolve, reject) => {\n      let simple = (typeof options === 'string');\n      if (simple) {\n        options = {\n          message: options,\n          name: 'input'\n        };\n      }\n      prompt.call(command, options, (result) => {\n        resolve(simple ? result.input : result);\n      });\n    });\n  };\n\n  command.requestPassword = async function() {\n    let result = await command.prompt({\n      type: 'password',\n      name: 'password',\n      message: Tools.translate('Enter password: ')\n    });\n    let password = result.password;\n    if (!password) {\n      throw new Error(Tools.translate('Invalid password'));\n    }\n    if (!Tools.mayBeHashpass(password)) {\n      return;\n    }\n    result = await command.prompt({\n      type: 'confirm',\n      name: 'hashpass',\n      default: true,\n      message: Tools.translate(\"That is a hashpass, isn't it? \")\n    });\n    return {\n      password: password,\n      notHashpass: !result || !result.hashpass\n    };\n  };\n}\n\nvorpal.installHandler = function(command, handler, { description, alias, options } = {}) {\n  command = vorpal.command(command, description || undefined).action(async function(args, callback) {\n    try {\n      setupMethods(this);\n      let result = await handler.call(this, args);\n      if (result) {\n        console.log(result);\n      }\n      callback();\n    } catch (err) {\n      console.log(err.stack || err);\n      callback();\n    }\n  }).cancel(() => {\n    console.log(Tools.translate('Cancelled'));\n  });\n  if (alias) {\n    if (_(alias).isArray()) {\n      command.alias(...alias);\n    } else {\n      command.alias(alias);\n    }\n  }\n  if (_(options).isArray()) {\n    options.forEach((option) => {\n      command.option(option.value, option.description || undefined);\n    });\n  }\n};\n\nvorpal.find('exit').remove();\n\nTools.loadPlugins([__dirname, `${__dirname}/custom`], (fileName, _1, _2, path) => {\n  return ('index.js' !== fileName) || (path.split('/') === 'custom');\n}).filter(plugin => config(`system.commands.${plugin.command.split(/\\s/)[0]}`, true)).forEach((plugin) => {\n  vorpal.installHandler(plugin.command, plugin.handler, plugin.options);\n});\n\nexport default function commands() {\n  console.log(Tools.translate(\"Type 'help' for commands\"));\n  vorpal.delimiter('ololord.js>').show();\n  return vorpal;\n}\n"],"sourceRoot":"/source/"}