{"version":3,"sources":["server-renderer.js"],"names":["Renderer","RenderScheduler","IPC","Tools","BoardsModel","onReady","ready","err","console","error","stack","process","exit","initializeMaster","log","translate","on","worker","pid","fork","i","initialize","send","compileTemplates","_1","done","reloadTemplates","job","info","data","scheduleRender","scheduleRenderArchive","scheduleRenderRSS","initializeWorker","status","f","type","Error","call","key","catch","isMaster"],"mappings":"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","file":"server-renderer.js","sourcesContent":["\n\nimport 'babel-polyfill';\nimport 'source-map-support/register';\nimport Cluster from 'cluster';\n\nimport Board from './boards/board';\nimport commands from './commands';\nimport BoardController from './controllers/board';\nimport * as Renderer from './core/renderer';\nimport * as RenderScheduler from './core/render-scheduler';\nimport config from './helpers/config';\nimport * as IPC from './helpers/ipc';\nimport Logger from './helpers/logger';\nimport Queue from './helpers/queue';\nimport * as Tools from './helpers/tools';\nimport * as BoardsModel from './models/boards';\n\nfunction onReady() {\n  try {\n    if (!onReady.ready) {\n      onReady.ready = 0;\n    }\n    ++onReady.ready;\n    if (config('system.rendererWorkerCount') === onReady.ready) {\n      commands(true, 'ololord.js-rend>');\n    }\n  } catch (err) {\n    console.error(err);\n    try {\n      Logger.error(err.stack || err);\n    } catch (err) {\n      console.error(err);\n    }\n    process.exit(1);\n  }\n}\n\nfunction initializeMaster() {\n  //NOTE: Overcoming Babel bug\n  (async function() {\n    try {\n      console.log(Tools.translate('Spawning renderer workers, please, wait…'));\n      Cluster.on('exit', (worker) => {\n        Logger.error(Tools.translate('[$[1]] Renderer died, respawning…', '', worker.process.pid));\n        Cluster.fork();\n      });\n      for (let i = 0; i < config('system.rendererWorkerCount'); ++i) {\n        Cluster.fork();\n      }\n      Logger.initialize('renderer');\n      IPC.on('ready', onReady);\n      IPC.on('reloadBoards', async function() {\n        Board.initialize();\n        await IPC.send('reloadBoards');\n      });\n      IPC.on('reloadTemplates', async function() {\n        await Renderer.compileTemplates();\n        await IPC.send('reloadTemplates');\n      });\n      Queue.process('reloadBoards', async function(_1, done) {\n        try {\n          Board.initialize();\n          await IPC.send('reloadBoards');\n        } catch (err) {\n          Logger.error(err.stack || err);\n        }\n        done();\n      });\n      Queue.process('reloadTemplates', async function(_1, done) {\n        try {\n          await Renderer.reloadTemplates();\n          await IPC.send('reloadTemplates');\n        } catch (err) {\n          Logger.error(err.stack || err);\n        }\n        done();\n      });\n      Queue.process('render', async function(job, done) {\n        try {\n          Logger.info(Tools.translate('Task: $[1]', '', 'render'), job.data);\n          await RenderScheduler.scheduleRender(job.data);\n          done();\n        } catch (err) {\n          Logger.error(err.stack || err);\n          done(err);\n        }\n      });\n      Queue.process('renderArchive', async function(job, done) {\n        try {\n          Logger.info(Tools.translate('Task: $[1]', '', 'renderArchive'), job.data);\n          await RenderScheduler.scheduleRenderArchive(job.data);\n          done();\n        } catch (err) {\n          Logger.error(err.stack || err);\n          done(err);\n        }\n      });\n      Queue.process('renderRSS', async function(job, done) {\n        try {\n          Logger.info(Tools.translate('Task: $[1]', '', 'renderRSS'));\n          await RenderScheduler.scheduleRenderRSS();\n          done();\n        } catch (err) {\n          Logger.error(err.stack || err);\n          done(err);\n        }\n      });\n    } catch (err) {\n      Logger.error(err.stack || err);\n      process.exit(1);\n    }\n  })();\n}\n\nfunction initializeWorker() {\n  //NOTE: Overcoming Babel bug\n  (async function() {\n    console.log(Tools.translate('[$[1]] Initializing renderer…', '', process.pid));\n    try {\n      await BoardsModel.initialize();\n      await Renderer.reloadTemplates();\n      console.log(Tools.translate('[$[1]] Rendered initialized', '', process.pid));\n      IPC.on('exit', (status) => { process.exit(status); });\n      IPC.on('reloadBoards', () => {\n        Board.initialize();\n      });\n      IPC.on('reloadTemplates', async function() {\n        return await Renderer.reloadTemplates();\n      });\n      IPC.on('render', async function(data) {\n        let f = BoardController[`${data.type}`];\n        if (typeof f !== 'function') {\n          throw new Error(Tools.translate('Invalid render function'));\n        }\n        return await f.call(BoardController, data.key, data.data);\n      });\n      IPC.send('ready').catch((err) => {\n        Logger.error(err);\n      });\n    } catch (err) {\n      console.error(err);\n      try {\n        Logger.error(err.stack || err);\n      } catch (err) {\n        console.error(err);\n      }\n      process.exit(1);\n    }\n  })();\n}\n\nBoard.initialize();\n\nif (Cluster.isMaster) {\n  initializeMaster();\n} else {\n  initializeWorker();\n}\n\nprocess.on('uncaughtException', function(err) {\n  console.log(err);\n});\n"]}