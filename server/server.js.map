{"version":3,"sources":["server.js"],"names":["Renderer","IPC","OnlineCounter","Tools","BoardsModel","StatisticsModel","UsersModel","generateFileName","fileName","now","toString","lastFileName","Promise","resolve","setTimeout","onReady","ready","initializeUserBansMonitoring","interval","MINUTE","setInterval","generateStatistics","bind","renderRSS","initializeMaster","removeOldCaptchImages","compileTemplates","reloadTemplates","generateTemplatingJavaScriptFile","rerender","archive","console","log","translate","generateCustomJavaScriptFile","generateCustomCSSFiles","on","worker","process","pid","fork","i","data","send","render","boardName","threadNumber","postNumber","action","renderArchive","initialize","hasNewPosts","isEmpty","catch","err","error","stack","SECOND","key","rerenderArchive","exit","initializeWorker","sockets","WeakSet","server","createServer","ws","listen","status","reject","close","forEach","socket","delete","destroy","clear","type","message","ips","hashpasses","sendMessage","f","Error","call","keys","notifyAboutNewPosts","unique","add","isMaster"],"mappings":"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","file":"server.js","sourcesContent":["\n\nimport 'babel-polyfill';\nimport 'source-map-support/register';\nimport _ from 'underscore';\nimport Cluster from 'cluster';\nimport HTTP from 'http';\n\nimport Board from './boards/board';\nimport Captcha from './captchas/captcha';\nimport NodeCaptcha from './captchas/node-captcha';\nimport NodeCaptchaNoscript from './captchas/node-captcha-noscript';\nimport commands from './commands';\nimport controllers from './controllers';\nimport BoardController from './controllers/board';\nimport geolocation from './core/geolocation';\nimport * as Renderer from './core/renderer';\nimport WebSocketServer from './core/websocket-server';\nimport config from './helpers/config';\nimport * as IPC from './helpers/ipc';\nimport Logger from './helpers/logger';\nimport * as OnlineCounter from './helpers/online-counter';\nimport Program from './helpers/program';\nimport * as Tools from './helpers/tools';\nimport * as BoardsModel from './models/boards';\nimport * as StatisticsModel from './models/statistics';\nimport * as UsersModel from './models/users';\n\nfunction generateFileName() {\n  let fileName = _.now().toString();\n  if (fileName != generateFileName.lastFileName) {\n    generateFileName.lastFileName = fileName;\n    return fileName;\n  }\n  return new Promise((resolve) => {\n    setTimeout(async function() {\n      let fileName = await fileName();\n      resolve(fileName);\n    }, 1);\n  });\n}\n\nfunction onReady() {\n  //TODO: May throw error\n  if (!onReady.ready) {\n    onReady.ready = 0;\n  }\n  ++onReady.ready;\n  if (config('system.workerCount') === onReady.ready) {\n    UsersModel.initializeUserBansMonitoring(); //NOTE: No \"await\" here, this is how it is meant to be.\n    if (config('server.statistics.enabled')) {\n      let interval = config('server.statistics.ttl') * Tools.MINUTE;\n      setInterval(StatisticsModel.generateStatistics.bind(StatisticsModel), interval);\n    }\n    if (config('server.rss.enabled')) {\n      setInterval(BoardController.renderRSS.bind(BoardController), config('server.rss.ttl') * Tools.MINUTE);\n    }\n    commands();\n  }\n}\n\nfunction initializeMaster() {\n  //NOTE: Overcoming Babel bug\n  (async function() {\n    try {\n      await NodeCaptcha.removeOldCaptchImages();\n      await NodeCaptchaNoscript.removeOldCaptchImages();\n      await Renderer.compileTemplates();\n      await Renderer.reloadTemplates();\n      await Renderer.generateTemplatingJavaScriptFile();\n      if (Program.rerender || config('system.rerenderCacheOnStartup')) {\n        if (Program.archive || config('system.rerenderArchive')) {\n          await Renderer.rerender();\n        } else {\n          await Renderer.rerender(['**', '!/*/arch/*']);\n        }\n      }\n      console.log(Tools.translate('Generating statistics…'));\n      await StatisticsModel.generateStatistics();\n      await Renderer.generateCustomJavaScriptFile();\n      await Renderer.generateCustomCSSFiles();\n      console.log(Tools.translate('Spawning workers, please, wait…'));\n      Cluster.on('exit', (worker) => {\n        Logger.log(Tools.translate('[$[1]] Died, respawning…', '', worker.process.pid));\n        Cluster.fork();\n      });\n      for (let i = 0; i < config('system.workerCount'); ++i) {\n        Cluster.fork();\n      }\n      IPC.on('ready', onReady);\n      IPC.on('fileName', generateFileName);\n      IPC.on('sendChatMessage', (data) => {\n        return IPC.send('sendChatMessage', data);\n      });\n      IPC.on('render', (data) => {\n        return IPC.render(data.boardName, data.threadNumber, data.postNumber, data.action);\n      });\n      IPC.on('renderArchive', (data) => {\n        return IPC.renderArchive(data);\n      });\n      IPC.on('stop', () => {\n        return IPC.send('stop');\n      });\n      IPC.on('start', () => {\n        return IPC.send('start');\n      });\n      IPC.on('reloadBoards', () => {\n        Board.initialize();\n        return IPC.send('reloadBoards');\n      });\n      IPC.on('reloadTemplates', async function() {\n        await Renderer.compileTemplates();\n        await Renderer.reloadTemplates();\n        await Renderer.generateTemplatingJavaScriptFile();\n        return IPC.send('reloadTemplates');\n      });\n      let hasNewPosts = {};\n      setInterval(() => {\n        if (_(hasNewPosts).isEmpty()) {\n          return;\n        }\n        IPC.send('notifyAboutNewPosts', hasNewPosts).catch((err) => {\n          Logger.error(err.stack || err);\n        });\n        hasNewPosts = {};\n      }, Tools.SECOND);\n      IPC.on('notifyAboutNewPosts', (key) => {\n        hasNewPosts[key] = 1;\n      });\n      IPC.on('rerenderCache', (rerenderArchive) => {\n        if (rerenderArchive) {\n          return Renderer.rerender();\n        } else {\n          return Renderer.rerender(['**', '!/*/arch/*']);\n        }\n      });\n    } catch (err) {\n      Logger.error(err.stack || err);\n      process.exit(1);\n    }\n  })();\n}\n\nfunction initializeWorker() {\n  //NOTE: Overcoming Babel bug\n  (async function() {\n    console.log(Tools.translate('[$[1]] Initializing…', '', process.pid));\n    try {\n      await geolocation.initialize();\n      await BoardsModel.initialize();\n      await Renderer.reloadTemplates();\n      let sockets = new WeakSet();\n      let server = HTTP.createServer(controllers);\n      let ws = new WebSocketServer(server);\n      server.listen(config('server.port'), () => {\n        console.log(Tools.translate('[$[1]] Listening on port $[2]…', '', process.pid, config('server.port')));\n        IPC.on('exit', (status) => { process.exit(status); });\n        IPC.on('stop', () => {\n          return new Promise((resolve, reject) => {\n            server.close(() => {\n              sockets.forEach((socket) => {\n                sockets.delete(socket);\n                socket.destroy();\n              });\n              OnlineCounter.clear();\n              console.log(Tools.translate('[$[1]] Closed', '', process.pid));\n              resolve();\n            });\n          });\n        });\n        IPC.on('start', () => {\n          return new Promise((resolve, reject) => {\n            server.listen(config('server.port'), () => {\n              console.log(Tools.translate('[$[1]] Listening on port $[2]…', '', process.pid, config('server.port')));\n              resolve();\n            });\n          });\n        });\n        IPC.on('sendChatMessage', ({ type, message, ips, hashpasses } = {}) => {\n          ws.sendMessage(type, message, ips, hashpasses);\n        });\n        IPC.on('render', async function(data) {\n          let f = BoardController[`${data.type}`];\n          if (typeof f !== 'function') {\n            throw new Error(Tools.translate('Invalid render function'));\n          }\n          return await f.call(BoardController, data.key, data.data);\n        });\n        IPC.on('reloadBoards', () => {\n          Board.initialize();\n        });\n        IPC.on('reloadTemplates', async function() {\n          return await Renderer.reloadTemplates();\n        });\n        IPC.on('notifyAboutNewPosts', (keys) => {\n          ws.notifyAboutNewPosts(keys);\n        });\n        IPC.on('getConnectionIPs', () => {\n           return OnlineCounter.unique();\n        });\n        IPC.send('ready').catch((err) => {\n          Logger.error(err);\n        });\n      });\n      server.on('connection', (socket) => {\n        sockets.add(socket);\n        socket.on('close', () => {\n          sockets.delete(socket);\n        });\n      });\n    } catch (err) {\n      console.log(err);\n      Logger.error(err.stack || err);\n    }\n  })();\n}\n\nBoard.initialize();\nCaptcha.initialize();\ncontrollers.initialize();\n\nif (Cluster.isMaster) {\n  initializeMaster();\n} else {\n  initializeWorker();\n}\n"],"sourceRoot":"/source/"}