{"version":3,"sources":["server.js"],"names":["Renderer","IPC","OnlineCounter","Tools","BoardsModel","StatisticsModel","UsersModel","generateFileName","fileName","now","toString","lastFileName","Promise","resolve","setTimeout","onReady","ready","initializeUserBansMonitoring","interval","MINUTE","setInterval","generateStatistics","bind","renderRSS","error","stack","console","err","process","exit","initializeMaster","removeOldCaptchImages","createIndexes","compileTemplates","reloadTemplates","generateTemplatingJavaScriptFile","rerender","archive","log","translate","generateCustomJavaScriptFile","generateCustomCSSFiles","on","worker","pid","fork","i","initialize","data","send","enqueueTask","hasNewPosts","isEmpty","catch","SECOND","key","initializeWorker","sockets","WeakSet","server","createServer","ws","listen","status","reject","close","forEach","socket","delete","destroy","clear","type","message","ips","hashpasses","sendMessage","keys","notifyAboutNewPosts","unique","add","isMaster"],"mappings":"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","file":"server.js","sourcesContent":["\n\nimport 'babel-polyfill';\nimport 'source-map-support/register';\nimport _ from 'underscore';\nimport Cluster from 'cluster';\nimport HTTP from 'http';\n\nimport Board from './boards/board';\nimport Captcha from './captchas/captcha';\nimport NodeCaptcha from './captchas/node-captcha';\nimport NodeCaptchaNoscript from './captchas/node-captcha-noscript';\nimport commands from './commands';\nimport controllers from './controllers';\nimport geolocation from './core/geolocation';\nimport * as Renderer from './core/renderer';\nimport WebSocketServer from './core/websocket-server';\nimport config from './helpers/config';\nimport * as IPC from './helpers/ipc';\nimport Logger from './helpers/logger';\nimport * as OnlineCounter from './helpers/online-counter';\nimport Program from './helpers/program';\nimport * as Tools from './helpers/tools';\nimport * as BoardsModel from './models/boards';\nimport * as StatisticsModel from './models/statistics';\nimport * as UsersModel from './models/users';\nimport mongodbClient from './storage/mongodb-client-factory';\n\nfunction generateFileName() {\n  let fileName = _.now().toString();\n  if (fileName != generateFileName.lastFileName) {\n    generateFileName.lastFileName = fileName;\n    return fileName;\n  }\n  return new Promise((resolve) => {\n    setTimeout(async function() {\n      let fileName = await fileName();\n      resolve(fileName);\n    }, 1);\n  });\n}\n\nfunction onReady() {\n  //NOTE: Overcoming Babel bug\n  (async function() {\n    try {\n      if (!onReady.ready) {\n        onReady.ready = 0;\n      }\n      ++onReady.ready;\n      if (config('system.workerCount') === onReady.ready) {\n        await UsersModel.initializeUserBansMonitoring();\n        if (config('server.statistics.enabled')) {\n          let interval = config('server.statistics.ttl') * Tools.MINUTE;\n          setInterval(StatisticsModel.generateStatistics.bind(StatisticsModel), interval);\n        }\n        if (config('server.rss.enabled')) {\n          setInterval(async function() {\n            try {\n              await IPC.renderRSS();\n            } catch (err) {\n              Logger.error(err.stack || err);\n            }\n          }, config('server.rss.ttl') * Tools.MINUTE);\n        }\n        commands();\n      }\n    } catch (err) {\n      console.error(err);\n      try {\n        Logger.error(err.stack || err);\n      } catch (err) {\n        console.error(err);\n      }\n      process.exit(1);\n    }\n  })();\n}\n\nfunction initializeMaster() {\n  //NOTE: Overcoming Babel bug\n  (async function() {\n    try {\n      await NodeCaptcha.removeOldCaptchImages();\n      await NodeCaptchaNoscript.removeOldCaptchImages();\n      await mongodbClient().createIndexes();\n      await Renderer.compileTemplates();\n      await Renderer.reloadTemplates();\n      await Renderer.generateTemplatingJavaScriptFile();\n      if (Program.rerender || config('system.rerenderCacheOnStartup')) {\n        if (Program.archive || config('system.rerenderArchive')) {\n          await Renderer.rerender();\n        } else {\n          await Renderer.rerender(['**', '!/*/arch/*']);\n        }\n      }\n      console.log(Tools.translate('Generating statistics…'));\n      await StatisticsModel.generateStatistics();\n      await Renderer.generateCustomJavaScriptFile();\n      await Renderer.generateCustomCSSFiles();\n      console.log(Tools.translate('Spawning workers, please, wait…'));\n      Cluster.on('exit', (worker) => {\n        Logger.error(Tools.translate('[$[1]] Died, respawning…', '', worker.process.pid));\n        Cluster.fork();\n      });\n      for (let i = 0; i < config('system.workerCount'); ++i) {\n        Cluster.fork();\n      }\n      Logger.initialize('main');\n      IPC.on('ready', onReady);\n      IPC.on('fileName', generateFileName);\n      IPC.on('sendChatMessage', (data) => {\n        return IPC.send('sendChatMessage', data);\n      });\n      IPC.on('stop', () => {\n        return IPC.send('stop');\n      });\n      IPC.on('start', () => {\n        return IPC.send('start');\n      });\n      IPC.on('reloadBoards', async function() {\n        Board.initialize();\n        await IPC.send('reloadBoards');\n        await IPC.enqueueTask('reloadBoards');\n      });\n      IPC.on('reloadTemplates', async function() {\n        await Renderer.compileTemplates();\n        await Renderer.reloadTemplates();\n        await Renderer.generateTemplatingJavaScriptFile();\n        await IPC.send('reloadTemplates');\n        await IPC.enqueueTask('reloadTemplates');\n      });\n      let hasNewPosts = {};\n      setInterval(() => {\n        if (_(hasNewPosts).isEmpty()) {\n          return;\n        }\n        IPC.send('notifyAboutNewPosts', hasNewPosts).catch((err) => {\n          Logger.error(err.stack || err);\n        });\n        hasNewPosts = {};\n      }, Tools.SECOND);\n      IPC.on('notifyAboutNewPosts', (key) => {\n        hasNewPosts[key] = 1;\n      });\n    } catch (err) {\n      Logger.error(err.stack || err);\n      process.exit(1);\n    }\n  })();\n}\n\nfunction initializeWorker() {\n  //NOTE: Overcoming Babel bug\n  (async function() {\n    console.log(Tools.translate('[$[1]] Initializing…', '', process.pid));\n    try {\n      await geolocation.initialize();\n      await BoardsModel.initialize();\n      await Renderer.reloadTemplates();\n      let sockets = new WeakSet();\n      let server = HTTP.createServer(controllers);\n      let ws = new WebSocketServer(server);\n      server.listen(config('server.port'), () => {\n        console.log(Tools.translate('[$[1]] Listening on port $[2]', '', process.pid, config('server.port')));\n        IPC.on('exit', (status) => { process.exit(status); });\n        IPC.on('stop', () => {\n          return new Promise((resolve, reject) => {\n            server.close(() => {\n              sockets.forEach((socket) => {\n                sockets.delete(socket);\n                socket.destroy();\n              });\n              OnlineCounter.clear();\n              console.log(Tools.translate('[$[1]] Closed', '', process.pid));\n              resolve();\n            });\n          });\n        });\n        IPC.on('start', () => {\n          return new Promise((resolve, reject) => {\n            server.listen(config('server.port'), () => {\n              console.log(Tools.translate('[$[1]] Listening on port $[2]…', '', process.pid, config('server.port')));\n              resolve();\n            });\n          });\n        });\n        IPC.on('sendChatMessage', ({ type, message, ips, hashpasses } = {}) => {\n          ws.sendMessage(type, message, ips, hashpasses);\n        });\n        IPC.on('reloadBoards', () => {\n          Board.initialize();\n        });\n        IPC.on('reloadTemplates', async function() {\n          return await Renderer.reloadTemplates();\n        });\n        IPC.on('notifyAboutNewPosts', (keys) => {\n          ws.notifyAboutNewPosts(keys);\n        });\n        IPC.on('getConnectionIPs', () => {\n           return OnlineCounter.unique();\n        });\n        IPC.send('ready').catch((err) => {\n          Logger.error(err);\n        });\n      });\n      server.on('connection', (socket) => {\n        sockets.add(socket);\n        socket.on('close', () => {\n          sockets.delete(socket);\n        });\n      });\n    } catch (err) {\n      console.error(err);\n      try {\n        Logger.error(err.stack || err);\n      } catch (err) {\n        console.error(err);\n      }\n      process.exit(1);\n    }\n  })();\n}\n\nBoard.initialize();\nCaptcha.initialize();\ncontrollers.initialize();\n\nif (Cluster.isMaster) {\n  initializeMaster();\n} else {\n  initializeWorker();\n}\n"],"sourceRoot":"/source/"}